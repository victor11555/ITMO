package cljtest.linear;

import cljtest.ClojureScript;
import clojure.lang.IPersistentVector;
import jstest.Engine;

import java.util.List;
import java.util.function.BiConsumer;
import java.util.function.Function;
import java.util.stream.Stream;

/**
 * @author Georgiy Korneev (kgeorgiy@kgeorgiy.info)
 */
public class LinearTensorTest extends LinearNaryTest {
    public static final BiConsumer<Engine.Result<IPersistentVector>, Number[][][]> CHECK_TENSOR_3 = checker(CHECK_MATRIX);
    public static final BiConsumer<Engine.Result<IPersistentVector>, Number[][][][]> CHECK_TENSOR_4 = checker(CHECK_TENSOR_3);

    public static final ClojureScript.F<IPersistentVector> T_ADD = vectorFunction("t+");
    public static final ClojureScript.F<IPersistentVector> T_SUB = vectorFunction("t-");
    public static final ClojureScript.F<IPersistentVector> T_MUL = vectorFunction("t*");

    @Override
    protected void test() {
        super.test();

        test1();
        test2();
        test3();
        test4();
        testErrors();
    }

    private static void testErrors(final List<Engine.Result<IPersistentVector>> tensors) {
        for (final Engine.Result<IPersistentVector> t1 : tensors) {
            for (final Engine.Result<IPersistentVector> t2 : tensors) {
                if (t1 != t2) {
                    assertException(T_ADD.expectException(t1, t2));
                    assertException(T_SUB.expectException(t1, t2));
                    assertException(T_MUL.expectException(t1, t2));
                    assertException(T_SUB.expectException(VECTOR.call(t1, t2)));
                }
            }
        }
    }

    private void testOps1(final Number[] add, final Number[] sub, final Number[] mul, final Number[]... args) {
        testOps(LinearTensorTest::vector, this::assertVector, add, sub, mul, args);
    }

    private void testOps2(final Number[][] add, final Number[][] sub, final Number[][] mul, final Number[][]... args) {
        testOps(LinearTensorTest::matrix, this::assertMatrix, add, sub, mul, args);
    }

    private void testOps3(final Number[][][] add, final Number[][][] sub, final Number[][][] mul, final Number[][][]... args) {
        testOps(LinearTensorTest::tensor3, this::assertTensor3, add, sub, mul, args);
    }

    private void testOps4(final Number[][][][] add, final Number[][][][] sub, final Number[][][][] mul, final Number[][][][]... args) {
        testOps(LinearTensorTest::tensor4, this::assertTensor4, add, sub, mul, args);
    }

    private static <T> void testOps(
            final Function<T, Engine.Result<IPersistentVector>> wrap,
            final BiConsumer<Engine.Result<IPersistentVector>, T> check,
            final T add,
            final T sub,
            final T mul,
            final T[] args
    ) {
        @SuppressWarnings("Convert2MethodRef")
        final Engine.Result<?>[] tensors = Stream.of(args).map(wrap).toArray(v -> new Engine.Result<?>[v]);
        check.accept(T_ADD.call(tensors), add);
        check.accept(T_SUB.call(tensors), sub);
        check.accept(T_MUL.call(tensors), mul);
    }

    protected static Engine.Result<IPersistentVector> tensor3(final Number[][]... t) {
        return wrap(LinearTensorTest::matrix, t);
    }

    protected static Engine.Result<IPersistentVector> tensor4(final Number[][][]... t) {
        return wrap(LinearTensorTest::tensor3, t);
    }

    protected void assertTensor3(final Engine.Result<IPersistentVector> result, final Number[][]... rows) {
        assertResult(CHECK_TENSOR_3, result, rows);
    }

    protected void assertTensor4(final Engine.Result<IPersistentVector> result, final Number[][][]... rows) {
        assertResult(CHECK_TENSOR_4, result, rows);
    }

    public static void main(final String... args) {
        new LinearTensorTest().run();
    }

    private void test1() {
        // Shape: [1]x1
        testOps1(
                new Number[]{-9.100},
                new Number[]{9.100},
                new Number[]{-9.100},
                new Number[]{-9.100}
        );

        // Shape: [2]x1
        testOps1(
                new Number[]{15.900},
                new Number[]{3.100},
                new Number[]{60.800},
                new Number[]{9.500},
                new Number[]{6.400}
        );

        // Shape: [3]x1
        testOps1(
                new Number[]{22.700},
                new Number[]{-9.300},
                new Number[]{417.477},
                new Number[]{6.700},
                new Number[]{9.300},
                new Number[]{6.700}
        );

        // Shape: [1]x2
        testOps1(
                new Number[]{4.300, 3.800},
                new Number[]{-4.300, -3.800},
                new Number[]{4.300, 3.800},
                new Number[]{4.300, 3.800}
        );

        // Shape: [2]x2
        testOps1(
                new Number[]{0.300, 0.100},
                new Number[]{-12.300, -12.700},
                new Number[]{-37.800, -40.320},
                new Number[]{-6.000, -6.300},
                new Number[]{6.300, 6.400}
        );

        // Shape: [3]x2
        testOps1(
                new Number[]{16.400, 11.600},
                new Number[]{1.200, 8.000},
                new Number[]{-67.320, -173.264},
                new Number[]{8.800, 9.800},
                new Number[]{8.500, 5.200},
                new Number[]{-0.900, -3.400}
        );

        // Shape: [1]x3
        testOps1(
                new Number[]{4.600, 4.100, -9.200},
                new Number[]{-4.600, -4.100, 9.200},
                new Number[]{4.600, 4.100, -9.200},
                new Number[]{4.600, 4.100, -9.200}
        );

        // Shape: [2]x3
        testOps1(
                new Number[]{-3.400, 14.700, 13.100},
                new Number[]{-9.400, -3.500, 5.700},
                new Number[]{-19.200, 50.960, 34.780},
                new Number[]{-6.400, 5.600, 9.400},
                new Number[]{3.000, 9.100, 3.700}
        );

        // Shape: [3]x3
        testOps1(
                new Number[]{-4.800, 11.500, 1.500},
                new Number[]{-2.400, -11.900, 8.100},
                new Number[]{316.800, -6.784, -212.160},
                new Number[]{-3.600, -0.200, 4.800},
                new Number[]{-10.000, 5.300, 5.200},
                new Number[]{8.800, 6.400, -8.500}
        );

    }

    private void test2() {
        // Shape: [1, 1]x1
        testOps2(
                new Number[][]{{-4.100}},
                new Number[][]{{4.100}},
                new Number[][]{{-4.100}},
                new Number[][]{{-4.100}}
        );

        // Shape: [2, 1]x1
        testOps2(
                new Number[][]{{-0.300}},
                new Number[][]{{8.100}},
                new Number[][]{{-16.380}},
                new Number[][]{{3.900}},
                new Number[][]{{-4.200}}
        );

        // Shape: [3, 1]x1
        testOps2(
                new Number[][]{{-19.100}},
                new Number[][]{{20.700}},
                new Number[][]{{79.200}},
                new Number[][]{{0.800}},
                new Number[][]{{-9.900}},
                new Number[][]{{-10.000}}
        );

        // Shape: [1, 2]x1
        testOps2(
                new Number[][]{{2.000}, {-8.900}},
                new Number[][]{{-2.000}, {8.900}},
                new Number[][]{{2.000}, {-8.900}},
                new Number[][]{{2.000}, {-8.900}}
        );

        // Shape: [2, 2]x1
        testOps2(
                new Number[][]{{-5.700}, {-3.400}},
                new Number[][]{{-10.300}, {11.400}},
                new Number[][]{{-18.400}, {-29.600}},
                new Number[][]{{-8.000}, {4.000}},
                new Number[][]{{2.300}, {-7.400}}
        );

        // Shape: [3, 2]x1
        testOps2(
                new Number[][]{{4.500}, {10.300}},
                new Number[][]{{-10.900}, {-24.300}},
                new Number[][]{{65.856}, {-518.700}},
                new Number[][]{{-3.200}, {-7.000}},
                new Number[][]{{9.800}, {9.500}},
                new Number[][]{{-2.100}, {7.800}}
        );

        // Shape: [1, 3]x1
        testOps2(
                new Number[][]{{3.300}, {8.200}, {-9.600}},
                new Number[][]{{-3.300}, {-8.200}, {9.600}},
                new Number[][]{{3.300}, {8.200}, {-9.600}},
                new Number[][]{{3.300}, {8.200}, {-9.600}}
        );

        // Shape: [2, 3]x1
        testOps2(
                new Number[][]{{-5.800}, {2.000}, {12.900}},
                new Number[][]{{-5.200}, {-6.400}, {-3.900}},
                new Number[][]{{1.650}, {-9.240}, {37.800}},
                new Number[][]{{-5.500}, {-2.200}, {4.500}},
                new Number[][]{{-0.300}, {4.200}, {8.400}}
        );

        // Shape: [3, 3]x1
        testOps2(
                new Number[][]{{7.200}, {14.400}, {16.000}},
                new Number[][]{{10.600}, {-0.400}, {-5.800}},
                new Number[][]{{-363.832}, {-65.450}, {110.058}},
                new Number[][]{{8.900}, {7.000}, {5.100}},
                new Number[][]{{5.600}, {-1.100}, {8.300}},
                new Number[][]{{-7.300}, {8.500}, {2.600}}
        );

        // Shape: [1, 1]x2
        testOps2(
                new Number[][]{{2.400, -8.400}},
                new Number[][]{{-2.400, 8.400}},
                new Number[][]{{2.400, -8.400}},
                new Number[][]{{2.400, -8.400}}
        );

        // Shape: [2, 1]x2
        testOps2(
                new Number[][]{{-4.500, -1.400}},
                new Number[][]{{14.300, 1.000}},
                new Number[][]{{-46.060, 0.240}},
                new Number[][]{{4.900, -0.200}},
                new Number[][]{{-9.400, -1.200}}
        );

        // Shape: [3, 1]x2
        testOps2(
                new Number[][]{{8.700, 13.600}},
                new Number[][]{{-15.700, 5.000}},
                new Number[][]{{-121.275, -67.704}},
                new Number[][]{{-3.500, 9.300}},
                new Number[][]{{7.700, 5.600}},
                new Number[][]{{4.500, -1.300}}
        );

        // Shape: [1, 2]x2
        testOps2(
                new Number[][]{{-4.400, 3.700}, {5.000, 7.000}},
                new Number[][]{{4.400, -3.700}, {-5.000, -7.000}},
                new Number[][]{{-4.400, 3.700}, {5.000, 7.000}},
                new Number[][]{{-4.400, 3.700}, {5.000, 7.000}}
        );

        // Shape: [2, 2]x2
        testOps2(
                new Number[][]{{-1.800, -17.100}, {-1.200, 16.100}},
                new Number[][]{{8.000, -1.900}, {-9.600, -2.700}},
                new Number[][]{{-15.190, 72.200}, {-22.680, 62.980}},
                new Number[][]{{3.100, -9.500}, {-5.400, 6.700}},
                new Number[][]{{-4.900, -7.600}, {4.200, 9.400}}
        );

        // Shape: [3, 2]x2
        testOps2(
                new Number[][]{{1.600, 2.200}, {1.800, -2.000}},
                new Number[][]{{1.800, -4.000}, {-21.600, -12.600}},
                new Number[][]{{-151.810, 59.094}, {-293.040, -49.056}},
                new Number[][]{{1.700, -0.900}, {-9.900, -7.300}},
                new Number[][]{{-9.500, 9.800}, {8.000, 2.100}},
                new Number[][]{{9.400, -6.700}, {3.700, 3.200}}
        );

        // Shape: [1, 3]x2
        testOps2(
                new Number[][]{{-8.900, -6.200}, {-10.000, -8.400}, {-1.500, 7.400}},
                new Number[][]{{8.900, 6.200}, {10.000, 8.400}, {1.500, -7.400}},
                new Number[][]{{-8.900, -6.200}, {-10.000, -8.400}, {-1.500, 7.400}},
                new Number[][]{{-8.900, -6.200}, {-10.000, -8.400}, {-1.500, 7.400}}
        );

        // Shape: [2, 3]x2
        testOps2(
                new Number[][]{{-8.100, -8.900}, {4.200, 16.000}, {-17.900, -4.800}},
                new Number[][]{{3.900, -8.700}, {-7.600, -1.000}, {-0.100, -12.000}},
                new Number[][]{{12.600, 0.880}, {-10.030, 63.750}, {80.100, -30.240}},
                new Number[][]{{-2.100, -8.800}, {-1.700, 7.500}, {-9.000, -8.400}},
                new Number[][]{{-6.000, -0.100}, {5.900, 8.500}, {-8.900, 3.600}}
        );

        // Shape: [3, 3]x2
        testOps2(
                new Number[][]{{5.600, 18.700}, {-5.400, -4.500}, {5.200, 3.300}},
                new Number[][]{{-17.800, -3.700}, {-7.200, -7.100}, {-15.200, 12.900}},
                new Number[][]{{-206.912, 126.900}, {27.846, 319.464}, {-88.000, -327.888}},
                new Number[][]{{-6.100, 7.500}, {-6.300, -5.800}, {-5.000, 8.100}},
                new Number[][]{{6.400, 1.800}, {2.600, 8.100}, {2.200, -9.200}},
                new Number[][]{{5.300, 9.400}, {-1.700, -6.800}, {8.000, 4.400}}
        );

        // Shape: [1, 1]x3
        testOps2(
                new Number[][]{{3.600, 8.200, -5.500}},
                new Number[][]{{-3.600, -8.200, 5.500}},
                new Number[][]{{3.600, 8.200, -5.500}},
                new Number[][]{{3.600, 8.200, -5.500}}
        );

        // Shape: [2, 1]x3
        testOps2(
                new Number[][]{{4.200, 2.900, -0.500}},
                new Number[][]{{-10.600, 5.700, -18.700}},
                new Number[][]{{-23.680, -6.020, -87.360}},
                new Number[][]{{-3.200, 4.300, -9.600}},
                new Number[][]{{7.400, -1.400, 9.100}}
        );

        // Shape: [3, 1]x3
        testOps2(
                new Number[][]{{-0.200, -2.600, 4.000}},
                new Number[][]{{-12.800, -9.000, 13.600}},
                new Number[][]{{-58.630, 107.880, 48.488}},
                new Number[][]{{-6.500, -5.800, 8.800}},
                new Number[][]{{2.200, -3.000, -1.900}},
                new Number[][]{{4.100, 6.200, -2.900}}
        );

        // Shape: [1, 2]x3
        testOps2(
                new Number[][]{{3.300, -0.900, -7.900}, {0.800, -7.600, -8.900}},
                new Number[][]{{-3.300, 0.900, 7.900}, {-0.800, 7.600, 8.900}},
                new Number[][]{{3.300, -0.900, -7.900}, {0.800, -7.600, -8.900}},
                new Number[][]{{3.300, -0.900, -7.900}, {0.800, -7.600, -8.900}}
        );

        // Shape: [2, 2]x3
        testOps2(
                new Number[][]{{0.300, 6.800, 13.800}, {-8.500, -2.200, -16.000}},
                new Number[][]{{1.900, 2.800, -5.600}, {-2.900, 15.800, 3.200}},
                new Number[][]{{-0.880, 9.600, 39.770}, {15.960, -61.200, 61.440}},
                new Number[][]{{1.100, 4.800, 4.100}, {-5.700, 6.800, -6.400}},
                new Number[][]{{-0.800, 2.000, 9.700}, {-2.800, -9.000, -9.600}}
        );

        // Shape: [3, 2]x3
        testOps2(
                new Number[][]{{14.300, -12.400, 18.700}, {1.000, 5.500, 7.300}},
                new Number[][]{{-14.700, 1.200, -7.900}, {9.400, 5.500, -2.500}},
                new Number[][]{{-9.588, 29.400, 224.100}, {-68.796, -465.520, 13.056}},
                new Number[][]{{-0.200, -5.600, 5.400}, {5.200, 5.500, 2.400}},
                new Number[][]{{9.400, 0.700, 5.000}, {-6.300, -9.200, 3.200}},
                new Number[][]{{5.100, -7.500, 8.300}, {2.100, 9.200, 1.700}}
        );

        // Shape: [1, 3]x3
        testOps2(
                new Number[][]{{-1.300, 9.800, 7.400}, {-5.400, -7.200, -7.700}, {9.200, 9.800, 1.900}},
                new Number[][]{{1.300, -9.800, -7.400}, {5.400, 7.200, 7.700}, {-9.200, -9.800, -1.900}},
                new Number[][]{{-1.300, 9.800, 7.400}, {-5.400, -7.200, -7.700}, {9.200, 9.800, 1.900}},
                new Number[][]{{-1.300, 9.800, 7.400}, {-5.400, -7.200, -7.700}, {9.200, 9.800, 1.900}}
        );

        // Shape: [2, 3]x3
        testOps2(
                new Number[][]{{-6.400, 0.100, -4.800}, {13.900, -7.500, 13.100}, {14.300, -10.400, 7.800}},
                new Number[][]{{11.400, -12.300, -7.400}, {-5.100, -8.700, 2.900}, {-4.300, 5.400, -11.600}},
                new Number[][]{{-22.250, -37.820, -7.930}, {41.800, -4.860, 40.800}, {46.500, 19.750, -18.430}},
                new Number[][]{{2.500, -6.100, -6.100}, {4.400, -8.100, 8.000}, {5.000, -2.500, -1.900}},
                new Number[][]{{-8.900, 6.200, 1.300}, {9.500, 0.600, 5.100}, {9.300, -7.900, 9.700}}
        );

        // Shape: [3, 3]x3
        testOps2(
                new Number[][]{{12.600, -2.100, -23.800}, {11.700, 5.500, 25.700}, {13.600, -1.100, -3.000}},
                new Number[][]{{1.600, 2.300, 5.000}, {2.300, 1.700, -9.300}, {1.600, -9.900, 11.600}},
                new Number[][]{{-157.194, -0.363, -479.682}, {-209.160, -81.432, 621.888}, {67.184, -22.165, -20.382}},
                new Number[][]{{7.100, 0.100, -9.400}, {7.000, 3.600, 8.200}, {7.600, -5.500, 4.300}},
                new Number[][]{{-2.700, -3.300, -8.100}, {8.300, 5.800, 7.900}, {2.600, 1.300, 0.600}},
                new Number[][]{{8.200, 1.100, -6.300}, {-3.600, -3.900, 9.600}, {3.400, 3.100, -7.900}}
        );

    }

    private void test3() {
        // Shape: [1, 1, 1]x1
        testOps3(
                new Number[][][]{{{-8.900}}},
                new Number[][][]{{{8.900}}},
                new Number[][][]{{{-8.900}}},
                new Number[][][]{{{-8.900}}}
        );

        // Shape: [2, 1, 1]x1
        testOps3(
                new Number[][][]{{{-1.200}}},
                new Number[][][]{{{15.200}}},
                new Number[][][]{{{-57.400}}},
                new Number[][][]{{{7.000}}},
                new Number[][][]{{{-8.200}}}
        );

        // Shape: [3, 1, 1]x1
        testOps3(
                new Number[][][]{{{2.400}}},
                new Number[][][]{{{3.000}}},
                new Number[][][]{{{-20.358}}},
                new Number[][][]{{{2.700}}},
                new Number[][][]{{{-2.900}}},
                new Number[][][]{{{2.600}}}
        );

        // Shape: [1, 2, 1]x1
        testOps3(
                new Number[][][]{{{-7.800}}, {{-6.400}}},
                new Number[][][]{{{7.800}}, {{6.400}}},
                new Number[][][]{{{-7.800}}, {{-6.400}}},
                new Number[][][]{{{-7.800}}, {{-6.400}}}
        );

        // Shape: [2, 2, 1]x1
        testOps3(
                new Number[][][]{{{-1.300}}, {{5.600}}},
                new Number[][][]{{{17.700}}, {{10.800}}},
                new Number[][][]{{{-77.900}}, {{-21.320}}},
                new Number[][][]{{{8.200}}, {{8.200}}},
                new Number[][][]{{{-9.500}}, {{-2.600}}}
        );

        // Shape: [3, 2, 1]x1
        testOps3(
                new Number[][][]{{{2.600}}, {{1.200}}},
                new Number[][][]{{{8.800}}, {{-13.800}}},
                new Number[][][]{{{13.338}}, {{112.518}}},
                new Number[][][]{{{5.700}}, {{-6.300}}},
                new Number[][][]{{{-1.800}}, {{9.400}}},
                new Number[][][]{{{-1.300}}, {{-1.900}}}
        );

        // Shape: [1, 3, 1]x1
        testOps3(
                new Number[][][]{{{4.900}}, {{5.700}}, {{-8.100}}},
                new Number[][][]{{{-4.900}}, {{-5.700}}, {{8.100}}},
                new Number[][][]{{{4.900}}, {{5.700}}, {{-8.100}}},
                new Number[][][]{{{4.900}}, {{5.700}}, {{-8.100}}}
        );

        // Shape: [2, 3, 1]x1
        testOps3(
                new Number[][][]{{{5.700}}, {{10.900}}, {{9.900}}},
                new Number[][][]{{{-12.700}}, {{-4.700}}, {{-5.100}}},
                new Number[][][]{{{-32.200}}, {{24.180}}, {{18.000}}},
                new Number[][][]{{{-3.500}}, {{3.100}}, {{2.400}}},
                new Number[][][]{{{9.200}}, {{7.800}}, {{7.500}}}
        );

        // Shape: [3, 3, 1]x1
        testOps3(
                new Number[][][]{{{-5.800}}, {{2.000}}, {{14.800}}},
                new Number[][][]{{{22.400}}, {{-4.000}}, {{4.600}}},
                new Number[][][]{{{392.590}}, {{18.910}}, {{-80.704}}},
                new Number[][][]{{{8.300}}, {{-1.000}}, {{9.700}}},
                new Number[][][]{{{-8.600}}, {{6.100}}, {{-1.300}}},
                new Number[][][]{{{-5.500}}, {{-3.100}}, {{6.400}}}
        );

        // Shape: [1, 1, 2]x1
        testOps3(
                new Number[][][]{{{-1.000}, {5.200}}},
                new Number[][][]{{{1.000}, {-5.200}}},
                new Number[][][]{{{-1.000}, {5.200}}},
                new Number[][][]{{{-1.000}, {5.200}}}
        );

        // Shape: [2, 1, 2]x1
        testOps3(
                new Number[][][]{{{-13.900}, {-10.100}}},
                new Number[][][]{{{1.900}, {-1.500}}},
                new Number[][][]{{{47.400}, {24.940}}},
                new Number[][][]{{{-6.000}, {-5.800}}},
                new Number[][][]{{{-7.900}, {-4.300}}}
        );

        // Shape: [3, 1, 2]x1
        testOps3(
                new Number[][][]{{{10.100}, {-11.800}}},
                new Number[][][]{{{8.300}, {-7.400}}},
                new Number[][][]{{{-149.040}, {572.448}}},
                new Number[][][]{{{9.200}, {-9.600}}},
                new Number[][][]{{{4.500}, {-8.900}}},
                new Number[][][]{{{-3.600}, {6.700}}}
        );

        // Shape: [1, 2, 2]x1
        testOps3(
                new Number[][][]{{{9.800}, {-2.900}}, {{-6.300}, {5.600}}},
                new Number[][][]{{{-9.800}, {2.900}}, {{6.300}, {-5.600}}},
                new Number[][][]{{{9.800}, {-2.900}}, {{-6.300}, {5.600}}},
                new Number[][][]{{{9.800}, {-2.900}}, {{-6.300}, {5.600}}}
        );

        // Shape: [2, 2, 2]x1
        testOps3(
                new Number[][][]{{{8.900}, {1.200}}, {{3.500}, {-9.500}}},
                new Number[][][]{{{-10.700}, {-0.400}}, {{6.100}, {4.100}}},
                new Number[][][]{{{-8.820}, {0.320}}, {{-6.240}, {18.360}}},
                new Number[][][]{{{-0.900}, {0.400}}, {{4.800}, {-2.700}}},
                new Number[][][]{{{9.800}, {0.800}}, {{-1.300}, {-6.800}}}
        );

        // Shape: [3, 2, 2]x1
        testOps3(
                new Number[][][]{{{-5.400}, {-7.000}}, {{-1.500}, {9.000}}},
                new Number[][][]{{{-8.200}, {5.600}}, {{3.900}, {3.400}}},
                new Number[][][]{{{410.380}, {-5.040}}, {{-49.296}, {-33.046}}},
                new Number[][][]{{{-6.800}, {-0.700}}, {{1.200}, {6.200}}},
                new Number[][][]{{{-7.100}, {-1.500}}, {{-7.900}, {-1.300}}},
                new Number[][][]{{{8.500}, {-4.800}}, {{5.200}, {4.100}}}
        );

        // Shape: [1, 3, 2]x1
        testOps3(
                new Number[][][]{{{6.300}, {-1.800}}, {{6.400}, {2.800}}, {{1.100}, {0.600}}},
                new Number[][][]{{{-6.300}, {1.800}}, {{-6.400}, {-2.800}}, {{-1.100}, {-0.600}}},
                new Number[][][]{{{6.300}, {-1.800}}, {{6.400}, {2.800}}, {{1.100}, {0.600}}},
                new Number[][][]{{{6.300}, {-1.800}}, {{6.400}, {2.800}}, {{1.100}, {0.600}}}
        );

        // Shape: [2, 3, 2]x1
        testOps3(
                new Number[][][]{{{-9.200}, {4.600}}, {{-4.900}, {-7.600}}, {{-9.100}, {-14.000}}},
                new Number[][][]{{{-3.000}, {-5.000}}, {{3.300}, {6.400}}, {{-4.700}, {0.600}}},
                new Number[][][]{{{18.910}, {-0.960}}, {{3.280}, {4.200}}, {{15.180}, {48.910}}},
                new Number[][][]{{{-6.100}, {-0.200}}, {{-0.800}, {-0.600}}, {{-6.900}, {-6.700}}},
                new Number[][][]{{{-3.100}, {4.800}}, {{-4.100}, {-7.000}}, {{-2.200}, {-7.300}}}
        );

        // Shape: [3, 3, 2]x1
        testOps3(
                new Number[][][]{{{9.000}, {-9.600}}, {{1.900}, {12.200}}, {{4.200}, {-11.800}}},
                new Number[][][]{{{-6.800}, {-5.200}}, {{-4.500}, {-8.400}}, {{4.000}, {-5.200}}},
                new Number[][][]{{{13.398}, {-8.658}}, {{48.269}, {20.748}}, {{-60.762}, {411.400}}},
                new Number[][][]{{{1.100}, {-7.400}}, {{-1.300}, {1.900}}, {{4.100}, {-8.500}}},
                new Number[][][]{{{5.800}, {-1.300}}, {{-4.700}, {9.100}}, {{-3.800}, {5.500}}},
                new Number[][][]{{{2.100}, {-0.900}}, {{7.900}, {1.200}}, {{3.900}, {-8.800}}}
        );

        // Shape: [1, 1, 3]x1
        testOps3(
                new Number[][][]{{{-3.000}, {-4.200}, {-3.500}}},
                new Number[][][]{{{3.000}, {4.200}, {3.500}}},
                new Number[][][]{{{-3.000}, {-4.200}, {-3.500}}},
                new Number[][][]{{{-3.000}, {-4.200}, {-3.500}}}
        );

        // Shape: [2, 1, 3]x1
        testOps3(
                new Number[][][]{{{-9.100}, {1.100}, {14.100}}},
                new Number[][][]{{{-2.900}, {-11.500}, {-0.900}}},
                new Number[][][]{{{18.600}, {-32.760}, {49.500}}},
                new Number[][][]{{{-6.000}, {-5.200}, {6.600}}},
                new Number[][][]{{{-3.100}, {6.300}, {7.500}}}
        );

        // Shape: [3, 1, 3]x1
        testOps3(
                new Number[][][]{{{-3.300}, {-0.800}, {-1.600}}},
                new Number[][][]{{{14.900}, {-3.400}, {-4.400}}},
                new Number[][][]{{{93.264}, {42.588}, {17.280}}},
                new Number[][][]{{{5.800}, {-2.100}, {-3.000}}},
                new Number[][][]{{{-6.700}, {5.200}, {3.200}}},
                new Number[][][]{{{-2.400}, {-3.900}, {-1.800}}}
        );

        // Shape: [1, 2, 3]x1
        testOps3(
                new Number[][][]{{{-4.200}, {8.400}, {5.500}}, {{-5.400}, {8.200}, {2.900}}},
                new Number[][][]{{{4.200}, {-8.400}, {-5.500}}, {{5.400}, {-8.200}, {-2.900}}},
                new Number[][][]{{{-4.200}, {8.400}, {5.500}}, {{-5.400}, {8.200}, {2.900}}},
                new Number[][][]{{{-4.200}, {8.400}, {5.500}}, {{-5.400}, {8.200}, {2.900}}}
        );

        // Shape: [2, 2, 3]x1
        testOps3(
                new Number[][][]{{{10.200}, {-14.800}, {-2.400}}, {{1.500}, {2.600}, {-0.100}}},
                new Number[][][]{{{1.800}, {2.800}, {1.400}}, {{-12.100}, {-15.000}, {-17.700}}},
                new Number[][][]{{{25.200}, {52.800}, {0.950}}, {{-36.040}, {-54.560}, {-78.320}}},
                new Number[][][]{{{6.000}, {-6.000}, {-0.500}}, {{-5.300}, {-6.200}, {-8.900}}},
                new Number[][][]{{{4.200}, {-8.800}, {-1.900}}, {{6.800}, {8.800}, {8.800}}}
        );

        // Shape: [3, 2, 3]x1
        testOps3(
                new Number[][][]{{{-5.300}, {19.800}, {-12.100}}, {{-4.600}, {-7.000}, {-6.100}}},
                new Number[][][]{{{1.700}, {-3.800}, {7.300}}, {{-5.000}, {25.400}, {-3.300}}},
                new Number[][][]{{{4.428}, {258.000}, {-13.104}}, {{0.384}, {603.612}, {52.029}}},
                new Number[][][]{{{-1.800}, {8.000}, {-2.400}}, {{-4.800}, {9.200}, {-4.700}}},
                new Number[][][]{{{-4.100}, {7.500}, {-0.600}}, {{-0.200}, {-8.100}, {2.700}}},
                new Number[][][]{{{0.600}, {4.300}, {-9.100}}, {{0.400}, {-8.100}, {-4.100}}}
        );

        // Shape: [1, 3, 3]x1
        testOps3(
                new Number[][][]{{{-9.700}, {9.600}, {3.300}}, {{-7.300}, {5.300}, {4.200}}, {{6.200}, {-3.600}, {9.300}}},
                new Number[][][]{{{9.700}, {-9.600}, {-3.300}}, {{7.300}, {-5.300}, {-4.200}}, {{-6.200}, {3.600}, {-9.300}}},
                new Number[][][]{{{-9.700}, {9.600}, {3.300}}, {{-7.300}, {5.300}, {4.200}}, {{6.200}, {-3.600}, {9.300}}},
                new Number[][][]{{{-9.700}, {9.600}, {3.300}}, {{-7.300}, {5.300}, {4.200}}, {{6.200}, {-3.600}, {9.300}}}
        );

        // Shape: [2, 3, 3]x1
        testOps3(
                new Number[][][]{{{0.200}, {9.900}, {15.300}}, {{-6.400}, {-3.100}, {0.200}}, {{-0.100}, {8.800}, {0.200}}},
                new Number[][][]{{{11.200}, {-8.100}, {-3.100}}, {{-10.400}, {6.300}, {-5.200}}, {{9.100}, {-6.200}, {-15.600}}},
                new Number[][][]{{{-31.350}, {8.100}, {56.120}}, {{-16.800}, {-7.520}, {-6.750}}, {{-20.700}, {9.750}, {-60.830}}},
                new Number[][][]{{{5.700}, {0.900}, {6.100}}, {{-8.400}, {1.600}, {-2.500}}, {{4.500}, {1.300}, {-7.700}}},
                new Number[][][]{{{-5.500}, {9.000}, {9.200}}, {{2.000}, {-4.700}, {2.700}}, {{-4.600}, {7.500}, {7.900}}}
        );

        // Shape: [3, 3, 3]x1
        testOps3(
                new Number[][][]{{{8.100}, {10.100}, {-5.400}}, {{-9.700}, {10.900}, {13.400}}, {{-3.500}, {10.500}, {1.700}}},
                new Number[][][]{{{8.700}, {8.900}, {11.800}}, {{20.500}, {5.900}, {-19.800}}, {{1.900}, {-14.900}, {9.300}}},
                new Number[][][]{{{-327.936}, {-1.520}, {-20.832}}, {{291.276}, {-572.544}, {-215.840}}, {{10.400}, {-75.504}, {3.960}}},
                new Number[][][]{{{8.400}, {9.500}, {3.200}}, {{5.400}, {8.400}, {-3.200}}, {{-0.800}, {-2.200}, {5.500}}},
                new Number[][][]{{{-6.400}, {0.800}, {0.700}}, {{-5.800}, {9.600}, {7.100}}, {{2.500}, {8.800}, {-3.600}}},
                new Number[][][]{{{6.100}, {-0.200}, {-9.300}}, {{-9.300}, {-7.100}, {9.500}}, {{-5.200}, {3.900}, {-0.200}}}
        );

        // Shape: [1, 1, 1]x2
        testOps3(
                new Number[][][]{{{7.800, -6.200}}},
                new Number[][][]{{{-7.800, 6.200}}},
                new Number[][][]{{{7.800, -6.200}}},
                new Number[][][]{{{7.800, -6.200}}}
        );

        // Shape: [2, 1, 1]x2
        testOps3(
                new Number[][][]{{{3.600, -15.300}}},
                new Number[][][]{{{5.600, 2.700}}},
                new Number[][][]{{{-4.600, 56.700}}},
                new Number[][][]{{{4.600, -6.300}}},
                new Number[][][]{{{-1.000, -9.000}}}
        );

        // Shape: [3, 1, 1]x2
        testOps3(
                new Number[][][]{{{23.200, -1.300}}},
                new Number[][][]{{{-5.800, 1.100}}},
                new Number[][][]{{{454.662, 5.440}}},
                new Number[][][]{{{8.700, -0.100}}},
                new Number[][][]{{{6.700, -8.000}}},
                new Number[][][]{{{7.800, 6.800}}}
        );

        // Shape: [1, 2, 1]x2
        testOps3(
                new Number[][][]{{{3.300, 7.700}}, {{3.500, -5.000}}},
                new Number[][][]{{{-3.300, -7.700}}, {{-3.500, 5.000}}},
                new Number[][][]{{{3.300, 7.700}}, {{3.500, -5.000}}},
                new Number[][][]{{{3.300, 7.700}}, {{3.500, -5.000}}}
        );

        // Shape: [2, 2, 1]x2
        testOps3(
                new Number[][][]{{{-3.300, -1.200}}, {{-5.400, 4.800}}},
                new Number[][][]{{{16.500, -8.800}}, {{7.400, -4.400}}},
                new Number[][][]{{{-65.340, -19.000}}, {{-6.400, 0.920}}},
                new Number[][][]{{{6.600, -5.000}}, {{1.000, 0.200}}},
                new Number[][][]{{{-9.900, 3.800}}, {{-6.400, 4.600}}}
        );

        // Shape: [3, 2, 1]x2
        testOps3(
                new Number[][][]{{{4.800, -5.800}}, {{3.700, 3.400}}},
                new Number[][][]{{{6.600, -2.000}}, {{15.700, 8.200}}},
                new Number[][][]{{{-116.850, 16.224}}, {{62.468, 7.424}}},
                new Number[][][]{{{5.700, -3.900}}, {{9.700, 5.800}}},
                new Number[][][]{{{4.100, 1.300}}, {{-4.600, -0.800}}},
                new Number[][][]{{{-5.000, -3.200}}, {{-1.400, -1.600}}}
        );

        // Shape: [1, 3, 1]x2
        testOps3(
                new Number[][][]{{{9.500, -3.600}}, {{1.500, 2.300}}, {{1.500, 6.000}}},
                new Number[][][]{{{-9.500, 3.600}}, {{-1.500, -2.300}}, {{-1.500, -6.000}}},
                new Number[][][]{{{9.500, -3.600}}, {{1.500, 2.300}}, {{1.500, 6.000}}},
                new Number[][][]{{{9.500, -3.600}}, {{1.500, 2.300}}, {{1.500, 6.000}}}
        );

        // Shape: [2, 3, 1]x2
        testOps3(
                new Number[][][]{{{7.100, -1.900}}, {{-10.200, -5.400}}, {{3.900, 6.300}}},
                new Number[][][]{{{-6.300, -16.700}}, {{3.400, 0.400}}, {{2.700, 2.500}}},
                new Number[][][]{{{2.680, -68.820}}, {{23.120, 7.250}}, {{1.980, 8.360}}},
                new Number[][][]{{{0.400, -9.300}}, {{-3.400, -2.500}}, {{3.300, 4.400}}},
                new Number[][][]{{{6.700, 7.400}}, {{-6.800, -2.900}}, {{0.600, 1.900}}}
        );

        // Shape: [3, 3, 1]x2
        testOps3(
                new Number[][][]{{{-8.300, 6.900}}, {{-3.100, -0.800}}, {{-7.800, -24.600}}},
                new Number[][][]{{{-10.100, -21.300}}, {{7.300, 2.200}}, {{-2.000, 8.400}}},
                new Number[][][]{{{346.104, -342.720}}, {{-58.905, -2.268}}, {{307.230, -526.500}}},
                new Number[][][]{{{-9.200, -7.200}}, {{2.100, 0.700}}, {{-4.900, -8.100}}},
                new Number[][][]{{{-5.700, 5.600}}, {{3.300, -2.700}}, {{-9.500, -10.000}}},
                new Number[][][]{{{6.600, 8.500}}, {{-8.500, 1.200}}, {{6.600, -6.500}}}
        );

        // Shape: [1, 1, 2]x2
        testOps3(
                new Number[][][]{{{-1.200, 7.800}, {-6.500, -9.900}}},
                new Number[][][]{{{1.200, -7.800}, {6.500, 9.900}}},
                new Number[][][]{{{-1.200, 7.800}, {-6.500, -9.900}}},
                new Number[][][]{{{-1.200, 7.800}, {-6.500, -9.900}}}
        );

        // Shape: [2, 1, 2]x2
        testOps3(
                new Number[][][]{{{-3.500, 7.800}, {-3.700, 2.400}}},
                new Number[][][]{{{-3.900, -4.000}, {10.100, 3.200}}},
                new Number[][][]{{{-0.740, 11.210}, {-22.080, -1.120}}},
                new Number[][][]{{{-3.700, 1.900}, {3.200, 2.800}}},
                new Number[][][]{{{0.200, 5.900}, {-6.900, -0.400}}}
        );

        // Shape: [3, 1, 2]x2
        testOps3(
                new Number[][][]{{{3.000, 7.900}, {-5.600, 7.000}}},
                new Number[][][]{{{9.600, -1.100}, {11.000, -13.000}}},
                new Number[][][]{{{17.010, -50.116}, {8.532, -8.730}}},
                new Number[][][]{{{6.300, 3.400}, {2.700, -3.000}}},
                new Number[][][]{{{-1.500, 6.700}, {-0.400, 9.700}}},
                new Number[][][]{{{-1.800, -2.200}, {-7.900, 0.300}}}
        );

        // Shape: [1, 2, 2]x2
        testOps3(
                new Number[][][]{{{9.500, 0.700}, {-4.900, -4.300}}, {{7.700, 0.600}, {-9.300, 0.400}}},
                new Number[][][]{{{-9.500, -0.700}, {4.900, 4.300}}, {{-7.700, -0.600}, {9.300, -0.400}}},
                new Number[][][]{{{9.500, 0.700}, {-4.900, -4.300}}, {{7.700, 0.600}, {-9.300, 0.400}}},
                new Number[][][]{{{9.500, 0.700}, {-4.900, -4.300}}, {{7.700, 0.600}, {-9.300, 0.400}}}
        );

        // Shape: [2, 2, 2]x2
        testOps3(
                new Number[][][]{{{6.900, -6.100}, {-6.800, -3.800}}, {{-0.500, 9.700}, {-4.900, 15.700}}},
                new Number[][][]{{{8.900, 13.900}, {7.200, -3.600}}, {{7.100, -8.700}, {12.300, 1.100}}},
                new Number[][][]{{{-7.900, -39.000}, {-1.400, 0.370}}, {{-12.540, 4.600}, {-31.820, 61.320}}},
                new Number[][][]{{{7.900, 3.900}, {0.200, -3.700}}, {{3.300, 0.500}, {3.700, 8.400}}},
                new Number[][][]{{{-1.000, -10.000}, {-7.000, -0.100}}, {{-3.800, 9.200}, {-8.600, 7.300}}}
        );

        // Shape: [3, 2, 2]x2
        testOps3(
                new Number[][][]{{{-11.000, -3.800}, {5.800, 1.200}}, {{5.600, -0.600}, {10.700, 7.200}}},
                new Number[][][]{{{0.800, 19.200}, {11.600, 2.400}}, {{10.600, -16.000}, {-1.100, -18.200}}},
                new Number[][][]{{{-28.764, 134.442}, {-79.344, 0.144}}, {{-227.934, -113.876}, {25.344, -188.760}}},
                new Number[][][]{{{-5.100, 7.700}, {8.700, 1.800}}, {{8.100, -8.300}, {4.800, -5.500}}},
                new Number[][][]{{{-1.200, -9.700}, {-4.800, -0.200}}, {{4.200, 2.800}, {4.800, 3.900}}},
                new Number[][][]{{{-4.700, -1.800}, {1.900, -0.400}}, {{-6.700, 4.900}, {1.100, 8.800}}}
        );

        // Shape: [1, 3, 2]x2
        testOps3(
                new Number[][][]{{{-1.200, 7.900}, {1.900, 4.600}}, {{-7.400, 6.100}, {-4.400, 2.500}}, {{-7.600, 4.200}, {-8.600, -3.100}}},
                new Number[][][]{{{1.200, -7.900}, {-1.900, -4.600}}, {{7.400, -6.100}, {4.400, -2.500}}, {{7.600, -4.200}, {8.600, 3.100}}},
                new Number[][][]{{{-1.200, 7.900}, {1.900, 4.600}}, {{-7.400, 6.100}, {-4.400, 2.500}}, {{-7.600, 4.200}, {-8.600, -3.100}}},
                new Number[][][]{{{-1.200, 7.900}, {1.900, 4.600}}, {{-7.400, 6.100}, {-4.400, 2.500}}, {{-7.600, 4.200}, {-8.600, -3.100}}}
        );

        // Shape: [2, 3, 2]x2
        testOps3(
                new Number[][][]{{{3.500, 7.000}, {2.200, -5.300}}, {{-4.800, -11.600}, {1.400, 13.100}}, {{-16.000, -10.700}, {12.900, 7.600}}},
                new Number[][][]{{{1.700, -4.200}, {4.400, -7.500}}, {{-12.400, 7.400}, {-12.200, -4.100}}, {{-1.800, -1.900}, {4.300, -9.800}}},
                new Number[][][]{{{2.340, 7.840}, {-3.630, -7.040}}, {{-32.680, 19.950}, {-36.720, 38.700}}, {{63.190, 27.720}, {36.980, -9.570}}},
                new Number[][][]{{{2.600, 1.400}, {3.300, -6.400}}, {{-8.600, -2.100}, {-5.400, 4.500}}, {{-8.900, -6.300}, {8.600, -1.100}}},
                new Number[][][]{{{0.900, 5.600}, {-1.100, 1.100}}, {{3.800, -9.500}, {6.800, 8.600}}, {{-7.100, -4.400}, {4.300, 8.700}}}
        );

        // Shape: [3, 3, 2]x2
        testOps3(
                new Number[][][]{{{16.100, 20.400}, {11.300, -9.500}}, {{-3.300, -9.100}, {2.100, 4.300}}, {{2.500, -7.000}, {11.800, 7.000}}},
                new Number[][][]{{{-12.100, -9.200}, {-3.700, 5.900}}, {{-7.700, 1.700}, {13.900, -1.100}}, {{17.500, -11.400}, {6.200, -4.200}}},
                new Number[][][]{{{87.400, 279.552}, {-76.608, -9.936}}, {{390.720, 18.352}, {69.440, -95.680}}, {{-66.400, -10.304}, {-80.370, -14.910}}},
                new Number[][][]{{{2.000, 5.600}, {3.800, -1.800}}, {{-5.500, -3.700}, {8.000, 1.600}}, {{10.000, -9.200}, {9.000, 1.400}}},
                new Number[][][]{{{4.600, 5.200}, {9.600, -6.900}}, {{-7.400, -6.200}, {-2.800, 9.200}}, {{0.800, 0.800}, {-1.900, -1.500}}},
                new Number[][][]{{{9.500, 9.600}, {-2.100, -0.800}}, {{9.600, 0.800}, {-3.100, -6.500}}, {{-8.300, 1.400}, {4.700, 7.100}}}
        );

        // Shape: [1, 1, 3]x2
        testOps3(
                new Number[][][]{{{8.300, 9.100}, {-1.000, -9.500}, {3.600, -4.000}}},
                new Number[][][]{{{-8.300, -9.100}, {1.000, 9.500}, {-3.600, 4.000}}},
                new Number[][][]{{{8.300, 9.100}, {-1.000, -9.500}, {3.600, -4.000}}},
                new Number[][][]{{{8.300, 9.100}, {-1.000, -9.500}, {3.600, -4.000}}}
        );

        // Shape: [2, 1, 3]x2
        testOps3(
                new Number[][][]{{{2.500, -14.300}, {-16.500, 2.700}, {-7.200, 3.900}}},
                new Number[][][]{{{-3.900, 3.100}, {1.300, -13.500}, {-9.200, -8.900}}},
                new Number[][][]{{{-2.240, 48.720}, {67.640, -43.740}, {-8.200, -16.000}}},
                new Number[][][]{{{-0.700, -5.600}, {-7.600, -5.400}, {-8.200, -2.500}}},
                new Number[][][]{{{3.200, -8.700}, {-8.900, 8.100}, {1.000, 6.400}}}
        );

        // Shape: [3, 1, 3]x2
        testOps3(
                new Number[][][]{{{17.400, 9.900}, {-11.700, -2.700}, {8.600, 9.000}}},
                new Number[][][]{{{-10.400, -13.100}, {-3.900, 21.900}, {-4.400, -6.200}}},
                new Number[][][]{{{163.590, -25.344}, {-2.964, 333.696}, {-42.504, 9.240}}},
                new Number[][][]{{{3.500, -1.600}, {-7.800, 9.600}, {2.100, 1.400}}},
                new Number[][][]{{{8.200, 9.900}, {-3.800, -4.400}, {8.800, 1.000}}},
                new Number[][][]{{{5.700, 1.600}, {-0.100, -7.900}, {-2.300, 6.600}}}
        );

        // Shape: [1, 2, 3]x2
        testOps3(
                new Number[][][]{{{-7.700, 5.100}, {-3.100, -2.300}, {9.900, -7.000}}, {{0.300, 0.600}, {2.000, 6.700}, {1.800, 1.500}}},
                new Number[][][]{{{7.700, -5.100}, {3.100, 2.300}, {-9.900, 7.000}}, {{-0.300, -0.600}, {-2.000, -6.700}, {-1.800, -1.500}}},
                new Number[][][]{{{-7.700, 5.100}, {-3.100, -2.300}, {9.900, -7.000}}, {{0.300, 0.600}, {2.000, 6.700}, {1.800, 1.500}}},
                new Number[][][]{{{-7.700, 5.100}, {-3.100, -2.300}, {9.900, -7.000}}, {{0.300, 0.600}, {2.000, 6.700}, {1.800, 1.500}}}
        );

        // Shape: [2, 2, 3]x2
        testOps3(
                new Number[][][]{{{-10.700, -11.800}, {-5.200, -10.000}, {1.100, -10.800}}, {{2.100, 0.800}, {4.700, -14.600}, {-8.100, 13.000}}},
                new Number[][][]{{{9.100, -1.200}, {0.800, -0.600}, {-3.900, -3.200}}, {{-1.900, 17.800}, {2.300, -0.800}, {0.500, -0.200}}},
                new Number[][][]{{{7.920, 34.450}, {6.600, 24.910}, {-3.500, 26.600}}, {{0.200, -79.050}, {4.200, 53.130}, {16.340, 42.240}}},
                new Number[][][]{{{-0.800, -6.500}, {-2.200, -5.300}, {-1.400, -7.000}}, {{0.100, 9.300}, {3.500, -7.700}, {-3.800, 6.400}}},
                new Number[][][]{{{-9.900, -5.300}, {-3.000, -4.700}, {2.500, -3.800}}, {{2.000, -8.500}, {1.200, -6.900}, {-4.300, 6.600}}}
        );

        // Shape: [3, 2, 3]x2
        testOps3(
                new Number[][][]{{{-13.000, 20.700}, {14.500, 20.300}, {-18.700, -10.300}}, {{-4.500, 0.400}, {21.900, -13.100}, {2.600, -1.500}}},
                new Number[][][]{{{6.600, -15.900}, {-1.700, -0.300}, {16.100, -2.700}}, {{-4.900, -0.000}, {-4.100, 11.100}, {-12.400, 9.300}}},
                new Number[][][]{{{-23.040, 200.640}, {19.712, 231.000}, {-98.345, -23.205}}, {{198.528, -4.416}, {273.141, -30.100}, {-66.150, -6.669}}},
                new Number[][][]{{{-3.200, 2.400}, {6.400, 10.000}, {-1.300, -6.500}}, {{-4.700, 0.200}, {8.900, -1.000}, {-4.900, 3.900}}},
                new Number[][][]{{{-0.800, 9.500}, {0.400, 3.300}, {-8.900, -1.700}}, {{-6.400, 4.800}, {9.900, -3.500}, {3.000, -5.700}}},
                new Number[][][]{{{-9.000, 8.800}, {7.700, 7.000}, {-8.500, -2.100}}, {{6.600, -4.600}, {3.100, -8.600}, {4.500, 0.300}}}
        );

        // Shape: [1, 3, 3]x2
        testOps3(
                new Number[][][]{{{3.200, -1.400}, {5.500, 3.700}, {5.100, 4.100}}, {{9.100, -2.500}, {5.500, -2.300}, {-1.200, 3.700}}, {{0.400, -6.000}, {7.900, 6.900}, {-4.900, -3.900}}},
                new Number[][][]{{{-3.200, 1.400}, {-5.500, -3.700}, {-5.100, -4.100}}, {{-9.100, 2.500}, {-5.500, 2.300}, {1.200, -3.700}}, {{-0.400, 6.000}, {-7.900, -6.900}, {4.900, 3.900}}},
                new Number[][][]{{{3.200, -1.400}, {5.500, 3.700}, {5.100, 4.100}}, {{9.100, -2.500}, {5.500, -2.300}, {-1.200, 3.700}}, {{0.400, -6.000}, {7.900, 6.900}, {-4.900, -3.900}}},
                new Number[][][]{{{3.200, -1.400}, {5.500, 3.700}, {5.100, 4.100}}, {{9.100, -2.500}, {5.500, -2.300}, {-1.200, 3.700}}, {{0.400, -6.000}, {7.900, 6.900}, {-4.900, -3.900}}}
        );

        // Shape: [2, 3, 3]x2
        testOps3(
                new Number[][][]{{{-3.900, 5.800}, {8.500, -6.100}, {-11.000, 6.100}}, {{-12.100, 1.000}, {3.800, -5.200}, {3.000, 12.800}}, {{-2.000, -8.800}, {-8.300, -4.300}, {5.600, 5.400}}},
                new Number[][][]{{{-12.500, 10.400}, {-8.700, -4.300}, {-2.800, 6.300}}, {{3.500, 15.800}, {0.400, -5.000}, {11.200, 3.600}}, {{5.400, 6.800}, {-4.700, 6.300}, {3.000, 10.000}}},
                new Number[][][]{{{-35.260, -18.630}, {-0.860, 4.680}, {28.290, -0.620}}, {{33.540, -62.160}, {3.570, 0.510}, {-29.110, 37.720}}, {{-6.290, 7.800}, {11.700, -5.300}, {5.590, -17.710}}},
                new Number[][][]{{{-8.200, 8.100}, {-0.100, -5.200}, {-6.900, 6.200}}, {{-4.300, 8.400}, {2.100, -5.100}, {7.100, 8.200}}, {{1.700, -1.000}, {-6.500, 1.000}, {4.300, 7.700}}},
                new Number[][][]{{{4.300, -2.300}, {8.600, -0.900}, {-4.100, -0.100}}, {{-7.800, -7.400}, {1.700, -0.100}, {-4.100, 4.600}}, {{-3.700, -7.800}, {-1.800, -5.300}, {1.300, -2.300}}}
        );

        // Shape: [3, 3, 3]x2
        testOps3(
                new Number[][][]{{{4.200, -2.000}, {-23.300, -9.600}, {-16.400, -10.500}}, {{-0.200, -2.000}, {-12.100, -3.800}, {0.900, 4.000}}, {{-11.800, 2.900}, {-10.500, 10.700}, {-14.500, 6.400}}},
                new Number[][][]{{{-6.800, 1.200}, {7.500, -8.400}, {-3.600, -0.700}}, {{5.200, 2.200}, {6.300, 9.600}, {-2.300, 0.000}}, {{5.800, 12.500}, {12.900, 1.100}, {3.500, 0.000}}},
                new Number[][][]{{{2.262, 9.744}, {-448.167, 64.800}, {360.000, 103.600}}, {{-173.950, -1.696}, {17.052, -38.512}, {-0.105, -52.080}}, {{-57.810, -39.501}, {24.192, -70.092}, {26.125, -13.440}}},
                new Number[][][]{{{-1.300, -0.400}, {-7.900, -9.000}, {-10.000, -5.600}}, {{2.500, 0.100}, {-2.900, 2.900}, {-0.700, 2.000}}, {{-3.000, 7.700}, {1.200, 5.900}, {-5.500, 3.200}}},
                new Number[][][]{{{-0.300, 4.200}, {-9.300, 2.400}, {-10.000, 2.500}}, {{-9.800, 3.200}, {0.600, 1.600}, {0.100, 6.200}}, {{-4.700, 0.900}, {-2.100, 6.600}, {0.500, -1.000}}},
                new Number[][][]{{{5.800, -5.800}, {-6.100, -3.000}, {3.600, -7.400}}, {{7.100, -5.300}, {-9.800, -8.300}, {1.500, -4.200}}, {{-4.100, -5.700}, {-9.600, -1.800}, {-9.500, 4.200}}}
        );

        // Shape: [1, 1, 1]x3
        testOps3(
                new Number[][][]{{{-4.400, -2.800, -3.600}}},
                new Number[][][]{{{4.400, 2.800, 3.600}}},
                new Number[][][]{{{-4.400, -2.800, -3.600}}},
                new Number[][][]{{{-4.400, -2.800, -3.600}}}
        );

        // Shape: [2, 1, 1]x3
        testOps3(
                new Number[][][]{{{-8.200, 3.800, 0.300}}},
                new Number[][][]{{{3.000, 14.000, -7.500}}},
                new Number[][][]{{{14.560, -45.390, -14.040}}},
                new Number[][][]{{{-2.600, 8.900, -3.600}}},
                new Number[][][]{{{-5.600, -5.100, 3.900}}}
        );

        // Shape: [3, 1, 1]x3
        testOps3(
                new Number[][][]{{{-1.100, -1.700, 1.300}}},
                new Number[][][]{{{2.100, -0.700, -14.300}}},
                new Number[][][]{{{-1.680, 0.072, 143.000}}},
                new Number[][][]{{{0.500, -1.200, -6.500}}},
                new Number[][][]{{{1.200, 0.100, 10.000}}},
                new Number[][][]{{{-2.800, -0.600, -2.200}}}
        );

        // Shape: [1, 2, 1]x3
        testOps3(
                new Number[][][]{{{-3.200, -3.800, 9.700}}, {{3.600, 10.000, -0.400}}},
                new Number[][][]{{{3.200, 3.800, -9.700}}, {{-3.600, -10.000, 0.400}}},
                new Number[][][]{{{-3.200, -3.800, 9.700}}, {{3.600, 10.000, -0.400}}},
                new Number[][][]{{{-3.200, -3.800, 9.700}}, {{3.600, 10.000, -0.400}}}
        );

        // Shape: [2, 2, 1]x3
        testOps3(
                new Number[][][]{{{-9.500, 18.400, -14.800}}, {{5.100, 16.600, 1.000}}},
                new Number[][][]{{{-9.700, 0.600, -4.800}}, {{2.500, -1.000, -8.200}}},
                new Number[][][]{{{-0.960, 84.550, 49.000}}, {{4.940, 68.640, -16.560}}},
                new Number[][][]{{{-9.600, 9.500, -9.800}}, {{3.800, 7.800, -3.600}}},
                new Number[][][]{{{0.100, 8.900, -5.000}}, {{1.300, 8.800, 4.600}}}
        );

        // Shape: [3, 2, 1]x3
        testOps3(
                new Number[][][]{{{-2.800, 1.500, 8.000}}, {{-7.600, 3.700, 0.200}}},
                new Number[][][]{{{3.800, 16.700, 6.200}}, {{0.200, -13.300, 17.400}}},
                new Number[][][]{{{-1.890, 69.888, -78.242}}, {{13.912, -4.032, 98.560}}},
                new Number[][][]{{{0.500, 9.100, 7.100}}, {{-3.700, -4.800, 8.800}}},
                new Number[][][]{{{-4.200, -1.200, -2.900}}, {{-4.700, 0.100, -1.600}}},
                new Number[][][]{{{0.900, -6.400, 3.800}}, {{0.800, 8.400, -7.000}}}
        );

        // Shape: [1, 3, 1]x3
        testOps3(
                new Number[][][]{{{0.700, -7.100, 7.000}}, {{-5.200, 0.600, -7.600}}, {{9.300, 3.300, -5.000}}},
                new Number[][][]{{{-0.700, 7.100, -7.000}}, {{5.200, -0.600, 7.600}}, {{-9.300, -3.300, 5.000}}},
                new Number[][][]{{{0.700, -7.100, 7.000}}, {{-5.200, 0.600, -7.600}}, {{9.300, 3.300, -5.000}}},
                new Number[][][]{{{0.700, -7.100, 7.000}}, {{-5.200, 0.600, -7.600}}, {{9.300, 3.300, -5.000}}}
        );

        // Shape: [2, 3, 1]x3
        testOps3(
                new Number[][][]{{{-8.800, -6.800, 1.200}}, {{2.700, 5.800, -15.800}}, {{-16.200, -2.200, -1.900}}},
                new Number[][][]{{{-5.000, 12.000, -9.400}}, {{-6.100, 6.400, 2.400}}, {{-0.600, 11.200, -6.900}}},
                new Number[][][]{{{13.110, -24.440, -21.730}}, {{-7.480, -1.830, 60.970}}, {{65.520, -30.150, -11.000}}},
                new Number[][][]{{{-6.900, 2.600, -4.100}}, {{-1.700, 6.100, -6.700}}, {{-8.400, 4.500, -4.400}}},
                new Number[][][]{{{-1.900, -9.400, 5.300}}, {{4.400, -0.300, -9.100}}, {{-7.800, -6.700, 2.500}}}
        );

        // Shape: [3, 3, 1]x3
        testOps3(
                new Number[][][]{{{-3.300, -1.200, 23.300}}, {{3.600, -0.300, -2.400}}, {{0.700, 8.400, -3.800}}},
                new Number[][][]{{{-2.500, -0.600, -8.500}}, {{2.200, -5.100, -11.400}}, {{-19.500, -4.800, -9.400}}},
                new Number[][][]{{{66.700, 1.386, 449.920}}, {{-116.580, 132.219, -32.016}}, {{-239.700, 10.890, 358.314}}},
                new Number[][][]{{{-2.900, -0.900, 7.400}}, {{2.900, -2.700, -6.900}}, {{-9.400, 1.800, -6.600}}},
                new Number[][][]{{{-5.000, -1.400, 9.500}}, {{-6.000, -5.900, 2.900}}, {{5.100, 1.100, 8.900}}},
                new Number[][][]{{{4.600, 1.100, 6.400}}, {{6.700, 8.300, 1.600}}, {{5.000, 5.500, -6.100}}}
        );

        // Shape: [1, 1, 2]x3
        testOps3(
                new Number[][][]{{{3.100, -4.900, -7.500}, {-0.800, 6.700, 5.700}}},
                new Number[][][]{{{-3.100, 4.900, 7.500}, {0.800, -6.700, -5.700}}},
                new Number[][][]{{{3.100, -4.900, -7.500}, {-0.800, 6.700, 5.700}}},
                new Number[][][]{{{3.100, -4.900, -7.500}, {-0.800, 6.700, 5.700}}}
        );

        // Shape: [2, 1, 2]x3
        testOps3(
                new Number[][][]{{{-1.800, -0.100, 12.200}, {14.400, 4.800, -8.700}}},
                new Number[][][]{{{0.400, -3.300, -4.200}, {0.600, 3.600, -8.300}}},
                new Number[][][]{{{0.770, -2.720, 32.800}, {51.750, 2.520, 1.700}}},
                new Number[][][]{{{-0.700, -1.700, 4.000}, {7.500, 4.200, -8.500}}},
                new Number[][][]{{{-1.100, 1.600, 8.200}, {6.900, 0.600, -0.200}}}
        );

        // Shape: [3, 1, 2]x3
        testOps3(
                new Number[][][]{{{2.000, 1.800, -7.100}, {-1.800, -4.800, 10.300}}},
                new Number[][][]{{{4.200, 3.200, 5.100}, {17.000, -13.000, 5.500}}},
                new Number[][][]{{{-153.140, -8.250, -7.480}, {124.108, 68.530, -559.399}}},
                new Number[][][]{{{3.100, 2.500, -1.000}, {7.600, -8.900, 7.900}}},
                new Number[][][]{{{-7.600, 1.500, -4.400}, {-2.300, -1.400, -7.300}}},
                new Number[][][]{{{6.500, -2.200, -1.700}, {-7.100, 5.500, 9.700}}}
        );

        // Shape: [1, 2, 2]x3
        testOps3(
                new Number[][][]{{{5.900, 2.800, -2.400}, {-8.800, 8.400, -0.500}}, {{-4.000, 9.300, 1.800}, {-5.200, 9.400, 0.400}}},
                new Number[][][]{{{-5.900, -2.800, 2.400}, {8.800, -8.400, 0.500}}, {{4.000, -9.300, -1.800}, {5.200, -9.400, -0.400}}},
                new Number[][][]{{{5.900, 2.800, -2.400}, {-8.800, 8.400, -0.500}}, {{-4.000, 9.300, 1.800}, {-5.200, 9.400, 0.400}}},
                new Number[][][]{{{5.900, 2.800, -2.400}, {-8.800, 8.400, -0.500}}, {{-4.000, 9.300, 1.800}, {-5.200, 9.400, 0.400}}}
        );

        // Shape: [2, 2, 2]x3
        testOps3(
                new Number[][][]{{{-8.800, 2.900, -3.000}, {-6.500, 0.600, -11.500}}, {{4.900, -9.600, 0.900}, {5.700, 13.800, -3.200}}},
                new Number[][][]{{{-10.000, 16.900, -6.600}, {7.100, -5.000, -7.700}}, {{9.500, 4.600, -11.100}, {-0.900, -4.000, -16.800}}},
                new Number[][][]{{{-5.640, -69.300, -8.640}, {-2.040, -6.160, 18.240}}, {{-16.560, 17.750, -30.600}, {7.920, 43.610, -68.000}}},
                new Number[][][]{{{-9.400, 9.900, -4.800}, {0.300, -2.200, -9.600}}, {{7.200, -2.500, -5.100}, {2.400, 4.900, -10.000}}},
                new Number[][][]{{{0.600, -7.000, 1.800}, {-6.800, 2.800, -1.900}}, {{-2.300, -7.100, 6.000}, {3.300, 8.900, 6.800}}}
        );

        // Shape: [3, 2, 2]x3
        testOps3(
                new Number[][][]{{{0.400, -0.400, -8.100}, {4.600, -12.700, -6.500}}, {{-7.900, -15.000, -3.700}, {-0.800, -4.100, -9.500}}},
                new Number[][][]{{{16.600, 7.000, 18.700}, {-3.400, 14.100, 8.700}}, {{8.900, 0.600, 10.900}, {-14.800, -6.100, 3.700}}},
                new Number[][][]{{{119.000, -176.814, 196.365}, {1.914, 24.255, 8.448}}, {{7.540, -106.920, 32.832}, {48.672, 194.769, 38.048}}},
                new Number[][][]{{{8.500, 3.300, 5.300}, {0.600, 0.700, 1.100}}, {{0.500, -7.200, 3.600}, {-7.800, -5.100, -2.900}}},
                new Number[][][]{{{-5.600, -9.400, -9.500}, {1.100, -3.500, -1.200}}, {{-2.600, -4.500, -1.600}, {7.800, 6.700, -8.200}}},
                new Number[][][]{{{-2.500, 5.700, -3.900}, {2.900, -9.900, -6.400}}, {{-5.800, -3.300, -5.700}, {-0.800, -5.700, 1.600}}}
        );

        // Shape: [1, 3, 2]x3
        testOps3(
                new Number[][][]{{{3.300, 9.200, 5.200}, {-2.900, -0.400, -0.800}}, {{-5.500, 9.900, 3.200}, {6.700, -5.000, -8.200}}, {{6.600, 6.600, -1.000}, {-3.100, -3.500, 2.500}}},
                new Number[][][]{{{-3.300, -9.200, -5.200}, {2.900, 0.400, 0.800}}, {{5.500, -9.900, -3.200}, {-6.700, 5.000, 8.200}}, {{-6.600, -6.600, 1.000}, {3.100, 3.500, -2.500}}},
                new Number[][][]{{{3.300, 9.200, 5.200}, {-2.900, -0.400, -0.800}}, {{-5.500, 9.900, 3.200}, {6.700, -5.000, -8.200}}, {{6.600, 6.600, -1.000}, {-3.100, -3.500, 2.500}}},
                new Number[][][]{{{3.300, 9.200, 5.200}, {-2.900, -0.400, -0.800}}, {{-5.500, 9.900, 3.200}, {6.700, -5.000, -8.200}}, {{6.600, 6.600, -1.000}, {-3.100, -3.500, 2.500}}}
        );

        // Shape: [2, 3, 2]x3
        testOps3(
                new Number[][][]{{{12.800, 0.400, -15.800}, {-2.900, 6.700, 7.900}}, {{0.400, 1.200, 0.200}, {-13.000, 6.000, 4.500}}, {{3.300, 12.000, 6.300}, {-6.900, 2.600, -16.100}}},
                new Number[][][]{{{-5.800, -9.400, -4.200}, {7.300, 4.900, 3.300}}, {{-2.800, 1.000, -19.200}, {-4.200, 4.000, 9.500}}, {{16.100, 3.600, -8.100}, {-3.500, 8.200, -3.700}}},
                new Number[][][]{{{32.550, -22.050, 58.000}, {-11.220, 5.220, 12.880}}, {{-1.920, 0.110, -92.150}, {37.840, 5.000, -17.500}}, {{-62.080, 32.760, -6.480}, {8.840, -15.120, 61.380}}},
                new Number[][][]{{{3.500, -4.500, -10.000}, {2.200, 5.800, 5.600}}, {{-1.200, 1.100, -9.500}, {-8.600, 5.000, 7.000}}, {{9.700, 7.800, -0.900}, {-5.200, 5.400, -9.900}}},
                new Number[][][]{{{9.300, 4.900, -5.800}, {-5.100, 0.900, 2.300}}, {{1.600, 0.100, 9.700}, {-4.400, 1.000, -2.500}}, {{-6.400, 4.200, 7.200}, {-1.700, -2.800, -6.200}}}
        );

        // Shape: [3, 3, 2]x3
        testOps3(
                new Number[][][]{{{-1.900, 15.900, -11.700}, {-13.600, 10.500, 21.500}}, {{-4.400, 18.700, 11.300}, {-12.900, 12.900, -9.800}}, {{-3.900, 2.900, 2.900}, {-7.400, 7.700, 3.600}}},
                new Number[][][]{{{-3.900, -1.700, 13.700}, {9.600, -19.100, -14.300}}, {{21.200, -10.100, 0.900}, {0.900, -16.700, -1.000}}, {{-12.100, -3.100, -1.300}, {25.000, -22.300, 13.600}}},
                new Number[][][]{{{17.400, 93.081, 40.260}, {-51.600, -208.593, 288.144}}, {{343.728, 216.720, 25.620}, {-11.880, -95.665, 55.998}}, {{139.360, 2.911, -0.800}, {573.056, -372.008, 53.406}}},
                new Number[][][]{{{-2.900, 7.100, 1.000}, {-2.000, -4.300, 3.600}}, {{8.400, 4.300, 6.100}, {-6.000, -1.900, -5.400}}, {{-8.000, -0.100, 0.800}, {8.800, -7.300, 8.600}}},
                new Number[][][]{{{-2.000, 6.900, -6.600}, {-8.600, 9.900, 8.700}}, {{-6.200, 6.000, 1.000}, {-6.600, 9.500, 1.700}}, {{-2.600, -4.100, -0.400}, {-8.800, 9.800, -2.700}}},
                new Number[][][]{{{3.000, 1.900, -6.100}, {-3.000, 4.900, 9.200}}, {{-6.600, 8.400, 4.200}, {-0.300, 5.300, -6.100}}, {{6.700, 7.100, 2.500}, {-7.400, 5.200, -2.300}}}
        );

        // Shape: [1, 1, 3]x3
        testOps3(
                new Number[][][]{{{-7.000, -4.200, 6.900}, {-6.000, 1.800, -1.600}, {-7.100, 3.800, 8.200}}},
                new Number[][][]{{{7.000, 4.200, -6.900}, {6.000, -1.800, 1.600}, {7.100, -3.800, -8.200}}},
                new Number[][][]{{{-7.000, -4.200, 6.900}, {-6.000, 1.800, -1.600}, {-7.100, 3.800, 8.200}}},
                new Number[][][]{{{-7.000, -4.200, 6.900}, {-6.000, 1.800, -1.600}, {-7.100, 3.800, 8.200}}}
        );

        // Shape: [2, 1, 3]x3
        testOps3(
                new Number[][][]{{{0.600, -4.600, 9.500}, {2.400, 6.000, 3.700}, {-12.500, -8.500, 1.700}}},
                new Number[][][]{{{-13.000, -7.800, -3.900}, {-3.000, 1.400, -0.900}, {-6.300, 5.500, -4.100}}},
                new Number[][][]{{{-42.160, -9.920, 18.760}, {-0.810, 8.510, 3.220}, {29.140, 10.500, -3.480}}},
                new Number[][][]{{{-6.200, -6.200, 2.800}, {-0.300, 3.700, 1.400}, {-9.400, -1.500, -1.200}}},
                new Number[][][]{{{6.800, 1.600, 6.700}, {2.700, 2.300, 2.300}, {-3.100, -7.000, 2.900}}}
        );

        // Shape: [3, 1, 3]x3
        testOps3(
                new Number[][][]{{{19.000, -10.300, -7.800}, {-11.300, 7.900, 11.600}, {-3.100, 2.700, -6.400}}},
                new Number[][][]{{{-14.200, 14.100, 14.400}, {17.900, -24.700, -22.600}, {1.700, 5.300, 22.400}}},
                new Number[][][]{{{164.736, 70.395, 94.710}, {171.864, -550.368, -401.390}, {43.792, -3.600, 406.720}}},
                new Number[][][]{{{2.400, 1.900, 3.300}, {3.300, -8.400, -5.500}, {-0.700, 4.000, 8.000}}},
                new Number[][][]{{{8.800, -6.500, -7.000}, {-8.400, 9.100, 8.900}, {-9.200, -1.800, -8.200}}},
                new Number[][][]{{{7.800, -5.700, -4.100}, {-6.200, 7.200, 8.200}, {6.800, 0.500, -6.200}}}
        );

        // Shape: [1, 2, 3]x3
        testOps3(
                new Number[][][]{{{6.000, -4.300, -3.100}, {1.700, 6.600, 9.000}, {2.300, -9.500, 8.100}}, {{2.200, 8.500, -2.700}, {6.200, 7.300, -7.900}, {5.700, -8.400, -3.000}}},
                new Number[][][]{{{-6.000, 4.300, 3.100}, {-1.700, -6.600, -9.000}, {-2.300, 9.500, -8.100}}, {{-2.200, -8.500, 2.700}, {-6.200, -7.300, 7.900}, {-5.700, 8.400, 3.000}}},
                new Number[][][]{{{6.000, -4.300, -3.100}, {1.700, 6.600, 9.000}, {2.300, -9.500, 8.100}}, {{2.200, 8.500, -2.700}, {6.200, 7.300, -7.900}, {5.700, -8.400, -3.000}}},
                new Number[][][]{{{6.000, -4.300, -3.100}, {1.700, 6.600, 9.000}, {2.300, -9.500, 8.100}}, {{2.200, 8.500, -2.700}, {6.200, 7.300, -7.900}, {5.700, -8.400, -3.000}}}
        );

        // Shape: [2, 2, 3]x3
        testOps3(
                new Number[][][]{{{1.200, -8.000, -16.200}, {-7.600, 15.300, -5.200}, {-1.800, -2.500, -16.700}}, {{-17.700, -8.000, 7.400}, {-12.800, -1.800, 1.800}, {3.800, 3.900, -13.300}}},
                new Number[][][]{{{0.600, -11.200, -3.200}, {-5.200, -2.700, -6.200}, {12.800, -14.700, 2.500}}, {{0.300, -7.200, -10.200}, {-1.800, 2.400, -10.600}, {5.600, 4.300, -6.300}}},
                new Number[][][]{{{0.270, -15.360, 63.050}, {7.680, 56.700, -2.850}, {-40.150, -52.460, 68.160}}, {{78.300, 3.040, -12.320}, {40.150, -0.630, -27.280}, {-4.230, -0.820, 34.300}}},
                new Number[][][]{{{0.900, -9.600, -9.700}, {-6.400, 6.300, -5.700}, {5.500, -8.600, -7.100}}, {{-8.700, -7.600, -1.400}, {-7.300, 0.300, -4.400}, {4.700, 4.100, -9.800}}},
                new Number[][][]{{{0.300, 1.600, -6.500}, {-1.200, 9.000, 0.500}, {-7.300, 6.100, -9.600}}, {{-9.000, -0.400, 8.800}, {-5.500, -2.100, 6.200}, {-0.900, -0.200, -3.500}}}
        );

        // Shape: [3, 2, 3]x3
        testOps3(
                new Number[][][]{{{11.300, 0.900, -16.300}, {11.500, 11.000, -13.900}, {-3.600, -8.000, -6.300}}, {{-4.000, -5.700, 17.900}, {11.100, 9.500, -8.600}, {-10.700, -1.400, -9.900}}},
                new Number[][][]{{{-5.500, -9.700, 10.500}, {1.900, 7.000, 12.900}, {-12.800, -1.400, -2.300}}, {{-2.200, -9.500, -13.900}, {0.100, 7.900, 19.800}, {3.700, 7.000, -7.700}}},
                new Number[][][]{{{4.756, -22.880, -129.920}, {6.164, -567.000, -21.465}, {-19.680, 17.766, 11.223}}, {{132.370, 329.232, 126.000}, {42.336, -1.740, 264.152}, {-40.320, -109.620, 79.200}}},
                new Number[][][]{{{2.900, -4.400, -2.900}, {6.700, 9.000, -0.500}, {-8.200, -4.700, -4.300}}, {{-3.100, -7.600, 2.000}, {5.600, 8.700, 5.600}, {-3.500, 2.800, -8.800}}},
                new Number[][][]{{{0.200, 4.000, -7.000}, {0.200, 9.000, -8.100}, {0.600, 0.900, 0.900}}, {{6.100, 7.600, 8.400}, {2.700, 1.000, -5.300}, {-4.800, -8.700, -3.600}}},
                new Number[][][]{{{8.200, 1.300, -6.400}, {4.600, -7.000, -5.300}, {4.000, -4.200, -2.900}}, {{-7.000, -5.700, 7.500}, {2.800, -0.200, -8.900}, {-2.400, 4.500, 2.500}}}
        );

        // Shape: [1, 3, 3]x3
        testOps3(
                new Number[][][]{{{-4.400, -1.500, 8.600}, {2.800, -6.600, -8.900}, {-5.900, 3.900, -1.900}}, {{2.600, -8.200, 2.700}, {8.900, -5.100, -9.200}, {5.600, -2.500, -5.300}}, {{-0.700, -6.200, 3.100}, {6.500, 3.900, -6.700}, {9.700, -1.900, -2.700}}},
                new Number[][][]{{{4.400, 1.500, -8.600}, {-2.800, 6.600, 8.900}, {5.900, -3.900, 1.900}}, {{-2.600, 8.200, -2.700}, {-8.900, 5.100, 9.200}, {-5.600, 2.500, 5.300}}, {{0.700, 6.200, -3.100}, {-6.500, -3.900, 6.700}, {-9.700, 1.900, 2.700}}},
                new Number[][][]{{{-4.400, -1.500, 8.600}, {2.800, -6.600, -8.900}, {-5.900, 3.900, -1.900}}, {{2.600, -8.200, 2.700}, {8.900, -5.100, -9.200}, {5.600, -2.500, -5.300}}, {{-0.700, -6.200, 3.100}, {6.500, 3.900, -6.700}, {9.700, -1.900, -2.700}}},
                new Number[][][]{{{-4.400, -1.500, 8.600}, {2.800, -6.600, -8.900}, {-5.900, 3.900, -1.900}}, {{2.600, -8.200, 2.700}, {8.900, -5.100, -9.200}, {5.600, -2.500, -5.300}}, {{-0.700, -6.200, 3.100}, {6.500, 3.900, -6.700}, {9.700, -1.900, -2.700}}}
        );

        // Shape: [2, 3, 3]x3
        testOps3(
                new Number[][][]{{{-16.900, 1.800, 4.100}, {9.800, 0.100, 17.300}, {4.500, 3.000, 1.500}}, {{6.300, 0.800, -5.900}, {-11.000, 2.800, 5.800}, {0.700, 11.600, 8.900}}, {{7.600, 17.600, 0.100}, {10.800, -7.900, -2.300}, {-6.300, 3.500, 12.200}}},
                new Number[][][]{{{-1.100, 12.000, -2.300}, {-6.200, 6.300, 0.300}, {-5.100, 5.800, -8.300}}, {{4.700, -18.600, 4.300}, {5.600, -5.000, -2.200}, {10.100, 7.000, -3.700}}, {{-5.600, 1.600, -13.900}, {3.200, -4.300, 8.300}, {2.700, -0.700, 6.200}}},
                new Number[][][]{{{71.100, -35.190, 2.880}, {14.400, -9.920, 74.800}, {-1.440, -6.160, -16.660}}, {{4.400, -86.330, 4.080}, {22.410, -4.290, 7.200}, {-25.380, 21.390, 16.380}}, {{6.600, 76.800, -48.300}, {26.600, 10.980, -15.900}, {8.100, 2.940, 27.600}}},
                new Number[][][]{{{-9.000, 6.900, 0.900}, {1.800, 3.200, 8.800}, {-0.300, 4.400, -3.400}}, {{5.500, -8.900, -0.800}, {-2.700, -1.100, 1.800}, {5.400, 9.300, 2.600}}, {{1.000, 9.600, -6.900}, {7.000, -6.100, 3.000}, {-1.800, 1.400, 9.200}}},
                new Number[][][]{{{-7.900, -5.100, 3.200}, {8.000, -3.100, 8.500}, {4.800, -1.400, 4.900}}, {{0.800, 9.700, -5.100}, {-8.300, 3.900, 4.000}, {-4.700, 2.300, 6.300}}, {{6.600, 8.000, 7.000}, {3.800, -1.800, -5.300}, {-4.500, 2.100, 3.000}}}
        );

        // Shape: [3, 3, 3]x3
        testOps3(
                new Number[][][]{{{-2.000, -3.900, -10.800}, {8.000, -3.200, 19.800}, {8.400, -4.300, -10.700}}, {{-15.400, -0.700, -16.400}, {-2.900, 4.400, -5.600}, {4.000, 6.300, -0.100}}, {{3.500, 1.700, -5.900}, {-13.900, -11.300, 7.200}, {-10.300, -11.100, -4.200}}},
                new Number[][][]{{{1.000, 1.100, 17.200}, {-23.400, -0.600, -1.200}, {9.600, -6.100, 1.700}}, {{-3.000, -3.900, 5.600}, {-10.700, -6.200, 9.600}, {-8.200, 4.700, -6.300}}, {{-2.100, -3.500, 0.900}, {17.900, 7.100, 7.400}, {-5.100, 15.300, 8.400}}},
                new Number[][][]{{{2.250, 3.696, 135.168}, {-466.004, 2.166, 175.398}, {-181.440, 335.920, 141.075}}, {{-47.840, 16.560, -132.246}, {41.616, -6.264, 10.880}, {-12.348, -316.800, 146.880}}, {{-5.796, 12.168, 45.675}, {126.360, -26.775, -47.450}, {98.175, 88.935, -41.538}}},
                new Number[][][]{{{-0.500, -1.400, 3.200}, {-7.700, -1.900, 9.300}, {9.000, -5.200, -4.500}}, {{-9.200, -2.300, -5.400}, {-6.800, -0.900, 2.000}, {-2.100, 5.500, -3.200}}, {{0.700, -0.900, -2.500}, {2.000, -2.100, 7.300}, {-7.700, 2.100, 2.100}}},
                new Number[][][]{{{1.500, -3.300, -9.600}, {6.800, 0.600, 8.200}, {-4.800, 8.500, -9.500}}, {{-5.200, 3.600, -7.900}, {5.100, 2.400, -6.800}, {1.200, 8.000, -5.400}}, {{4.600, -2.600, 2.900}, {-8.100, -7.500, 2.500}, {2.500, -5.500, -8.600}}},
                new Number[][][]{{{-3.000, 0.800, -4.400}, {8.900, -1.900, 2.300}, {4.200, -7.600, 3.300}}, {{-1.000, -2.000, -3.100}, {-1.200, 2.900, -0.800}, {4.900, -7.200, 8.500}}, {{-1.800, 5.200, -6.300}, {-7.800, -1.700, -2.600}, {-5.100, -7.700, 2.300}}}
        );

    }

    private void test4() {
        // Shape: [1, 1, 1, 1]x1
        testOps4(
                new Number[][][][]{{{{-8.700}}}},
                new Number[][][][]{{{{8.700}}}},
                new Number[][][][]{{{{-8.700}}}},
                new Number[][][][]{{{{-8.700}}}}
        );

        // Shape: [2, 1, 1, 1]x1
        testOps4(
                new Number[][][][]{{{{-3.000}}}},
                new Number[][][][]{{{{-2.200}}}},
                new Number[][][][]{{{{1.040}}}},
                new Number[][][][]{{{{-2.600}}}},
                new Number[][][][]{{{{-0.400}}}}
        );

        // Shape: [1, 2, 1, 1]x1
        testOps4(
                new Number[][][][]{{{{8.300}}}, {{{6.900}}}},
                new Number[][][][]{{{{-8.300}}}, {{{-6.900}}}},
                new Number[][][][]{{{{8.300}}}, {{{6.900}}}},
                new Number[][][][]{{{{8.300}}}, {{{6.900}}}}
        );

        // Shape: [2, 2, 1, 1]x1
        testOps4(
                new Number[][][][]{{{{1.000}}}, {{{-5.600}}}},
                new Number[][][][]{{{{-11.600}}}, {{{-4.400}}}},
                new Number[][][][]{{{{-33.390}}}, {{{3.000}}}},
                new Number[][][][]{{{{-5.300}}}, {{{-5.000}}}},
                new Number[][][][]{{{{6.300}}}, {{{-0.600}}}}
        );

        // Shape: [1, 1, 2, 1]x1
        testOps4(
                new Number[][][][]{{{{-3.500}}, {{2.600}}}},
                new Number[][][][]{{{{3.500}}, {{-2.600}}}},
                new Number[][][][]{{{{-3.500}}, {{2.600}}}},
                new Number[][][][]{{{{-3.500}}, {{2.600}}}}
        );

        // Shape: [2, 1, 2, 1]x1
        testOps4(
                new Number[][][][]{{{{12.400}}, {{-7.500}}}},
                new Number[][][][]{{{{6.600}}, {{0.700}}}},
                new Number[][][][]{{{{27.550}}, {{13.940}}}},
                new Number[][][][]{{{{9.500}}, {{-3.400}}}},
                new Number[][][][]{{{{2.900}}, {{-4.100}}}}
        );

        // Shape: [1, 2, 2, 1]x1
        testOps4(
                new Number[][][][]{{{{-1.000}}, {{-0.800}}}, {{{-2.200}}, {{1.000}}}},
                new Number[][][][]{{{{1.000}}, {{0.800}}}, {{{2.200}}, {{-1.000}}}},
                new Number[][][][]{{{{-1.000}}, {{-0.800}}}, {{{-2.200}}, {{1.000}}}},
                new Number[][][][]{{{{-1.000}}, {{-0.800}}}, {{{-2.200}}, {{1.000}}}}
        );

        // Shape: [2, 2, 2, 1]x1
        testOps4(
                new Number[][][][]{{{{10.400}}, {{9.800}}}, {{{-5.400}}, {{-4.400}}}},
                new Number[][][][]{{{{2.800}}, {{6.000}}}, {{{-11.000}}, {{-7.400}}}},
                new Number[][][][]{{{{25.080}}, {{15.010}}}, {{{-22.960}}, {{-8.850}}}},
                new Number[][][][]{{{{6.600}}, {{7.900}}}, {{{-8.200}}, {{-5.900}}}},
                new Number[][][][]{{{{3.800}}, {{1.900}}}, {{{2.800}}, {{1.500}}}}
        );

        // Shape: [1, 1, 1, 2]x1
        testOps4(
                new Number[][][][]{{{{-4.100}, {7.100}}}},
                new Number[][][][]{{{{4.100}, {-7.100}}}},
                new Number[][][][]{{{{-4.100}, {7.100}}}},
                new Number[][][][]{{{{-4.100}, {7.100}}}}
        );

        // Shape: [2, 1, 1, 2]x1
        testOps4(
                new Number[][][][]{{{{11.500}, {5.700}}}},
                new Number[][][][]{{{{5.700}, {5.500}}}},
                new Number[][][][]{{{{24.940}, {0.560}}}},
                new Number[][][][]{{{{8.600}, {5.600}}}},
                new Number[][][][]{{{{2.900}, {0.100}}}}
        );

        // Shape: [1, 2, 1, 2]x1
        testOps4(
                new Number[][][][]{{{{-6.500}, {-7.600}}}, {{{8.300}, {9.500}}}},
                new Number[][][][]{{{{6.500}, {7.600}}}, {{{-8.300}, {-9.500}}}},
                new Number[][][][]{{{{-6.500}, {-7.600}}}, {{{8.300}, {9.500}}}},
                new Number[][][][]{{{{-6.500}, {-7.600}}}, {{{8.300}, {9.500}}}}
        );

        // Shape: [2, 2, 1, 2]x1
        testOps4(
                new Number[][][][]{{{{2.100}, {-17.700}}}, {{{-8.600}, {-6.400}}}},
                new Number[][][][]{{{{17.700}, {0.100}}}, {{{-8.800}, {10.800}}}},
                new Number[][][][]{{{{-77.220}, {78.320}}}, {{{-0.870}, {-18.920}}}},
                new Number[][][][]{{{{9.900}, {-8.800}}}, {{{-8.700}, {2.200}}}},
                new Number[][][][]{{{{-7.800}, {-8.900}}}, {{{0.100}, {-8.600}}}}
        );

        // Shape: [1, 1, 2, 2]x1
        testOps4(
                new Number[][][][]{{{{-0.800}, {5.200}}, {{1.700}, {5.100}}}},
                new Number[][][][]{{{{0.800}, {-5.200}}, {{-1.700}, {-5.100}}}},
                new Number[][][][]{{{{-0.800}, {5.200}}, {{1.700}, {5.100}}}},
                new Number[][][][]{{{{-0.800}, {5.200}}, {{1.700}, {5.100}}}}
        );

        // Shape: [2, 1, 2, 2]x1
        testOps4(
                new Number[][][][]{{{{18.200}, {4.900}}, {{-0.600}, {10.300}}}},
                new Number[][][][]{{{{0.800}, {-6.500}}, {{9.400}, {7.300}}}},
                new Number[][][][]{{{{82.650}, {-4.560}}, {{-22.000}, {13.200}}}},
                new Number[][][][]{{{{9.500}, {-0.800}}, {{4.400}, {8.800}}}},
                new Number[][][][]{{{{8.700}, {5.700}}, {{-5.000}, {1.500}}}}
        );

        // Shape: [1, 2, 2, 2]x1
        testOps4(
                new Number[][][][]{{{{6.900}, {1.200}}, {{-2.500}, {-2.900}}}, {{{6.800}, {5.800}}, {{-6.400}, {-6.500}}}},
                new Number[][][][]{{{{-6.900}, {-1.200}}, {{2.500}, {2.900}}}, {{{-6.800}, {-5.800}}, {{6.400}, {6.500}}}},
                new Number[][][][]{{{{6.900}, {1.200}}, {{-2.500}, {-2.900}}}, {{{6.800}, {5.800}}, {{-6.400}, {-6.500}}}},
                new Number[][][][]{{{{6.900}, {1.200}}, {{-2.500}, {-2.900}}}, {{{6.800}, {5.800}}, {{-6.400}, {-6.500}}}}
        );

        // Shape: [2, 2, 2, 2]x1
        testOps4(
                new Number[][][][]{{{{-3.300}, {-14.200}}, {{-1.700}, {-5.000}}}, {{{-14.500}, {3.900}}, {{-17.900}, {9.000}}}},
                new Number[][][][]{{{{16.700}, {-3.000}}, {{9.500}, {13.400}}}, {{{-1.500}, {14.100}}, {{-1.900}, {-2.000}}}},
                new Number[][][][]{{{{-67.000}, {48.160}}, {{-21.840}, {-38.640}}}, {{{52.000}, {-45.900}}, {{79.200}, {19.250}}}},
                new Number[][][][]{{{{6.700}, {-8.600}}, {{3.900}, {4.200}}}, {{{-8.000}, {9.000}}, {{-9.900}, {3.500}}}},
                new Number[][][][]{{{{-10.000}, {-5.600}}, {{-5.600}, {-9.200}}}, {{{-6.500}, {-5.100}}, {{-8.000}, {5.500}}}}
        );

        // Shape: [1, 1, 1, 1]x2
        testOps4(
                new Number[][][][]{{{{-7.000, 9.600}}}},
                new Number[][][][]{{{{7.000, -9.600}}}},
                new Number[][][][]{{{{-7.000, 9.600}}}},
                new Number[][][][]{{{{-7.000, 9.600}}}}
        );

        // Shape: [2, 1, 1, 1]x2
        testOps4(
                new Number[][][][]{{{{3.400, 5.600}}}},
                new Number[][][][]{{{{0.400, 2.600}}}},
                new Number[][][][]{{{{2.850, 6.150}}}},
                new Number[][][][]{{{{1.900, 4.100}}}},
                new Number[][][][]{{{{1.500, 1.500}}}}
        );

        // Shape: [1, 2, 1, 1]x2
        testOps4(
                new Number[][][][]{{{{3.000, -8.100}}}, {{{1.200, 2.100}}}},
                new Number[][][][]{{{{-3.000, 8.100}}}, {{{-1.200, -2.100}}}},
                new Number[][][][]{{{{3.000, -8.100}}}, {{{1.200, 2.100}}}},
                new Number[][][][]{{{{3.000, -8.100}}}, {{{1.200, 2.100}}}}
        );

        // Shape: [2, 2, 1, 1]x2
        testOps4(
                new Number[][][][]{{{{-3.000, -6.700}}}, {{{-11.600, -6.000}}}},
                new Number[][][][]{{{{11.400, -1.500}}}, {{{7.600, 13.400}}}},
                new Number[][][][]{{{{-30.240, 10.660}}}, {{{19.200, -35.890}}}},
                new Number[][][][]{{{{4.200, -4.100}}}, {{{-2.000, 3.700}}}},
                new Number[][][][]{{{{-7.200, -2.600}}}, {{{-9.600, -9.700}}}}
        );

        // Shape: [1, 1, 2, 1]x2
        testOps4(
                new Number[][][][]{{{{-2.000, -2.600}}, {{-5.500, 8.700}}}},
                new Number[][][][]{{{{2.000, 2.600}}, {{5.500, -8.700}}}},
                new Number[][][][]{{{{-2.000, -2.600}}, {{-5.500, 8.700}}}},
                new Number[][][][]{{{{-2.000, -2.600}}, {{-5.500, 8.700}}}}
        );

        // Shape: [2, 1, 2, 1]x2
        testOps4(
                new Number[][][][]{{{{9.500, -11.600}}, {{7.100, -0.600}}}},
                new Number[][][][]{{{{-8.700, 1.800}}, {{9.700, 15.600}}}},
                new Number[][][][]{{{{3.640, 32.830}}, {{-10.920, -60.750}}}},
                new Number[][][][]{{{{0.400, -4.900}}, {{8.400, 7.500}}}},
                new Number[][][][]{{{{9.100, -6.700}}, {{-1.300, -8.100}}}}
        );

        // Shape: [1, 2, 2, 1]x2
        testOps4(
                new Number[][][][]{{{{4.000, 5.700}}, {{-8.000, -8.900}}}, {{{3.400, 9.700}}, {{1.000, -6.800}}}},
                new Number[][][][]{{{{-4.000, -5.700}}, {{8.000, 8.900}}}, {{{-3.400, -9.700}}, {{-1.000, 6.800}}}},
                new Number[][][][]{{{{4.000, 5.700}}, {{-8.000, -8.900}}}, {{{3.400, 9.700}}, {{1.000, -6.800}}}},
                new Number[][][][]{{{{4.000, 5.700}}, {{-8.000, -8.900}}}, {{{3.400, 9.700}}, {{1.000, -6.800}}}}
        );

        // Shape: [2, 2, 2, 1]x2
        testOps4(
                new Number[][][][]{{{{-0.700, 0.100}}, {{-9.200, 17.600}}}, {{{-8.600, 1.400}}, {{-0.500, -7.500}}}},
                new Number[][][][]{{{{-13.700, -16.100}}, {{2.600, -2.200}}}, {{{0.600, 14.400}}, {{1.300, -1.100}}}},
                new Number[][][][]{{{{-46.800, -64.800}}, {{19.470, 76.230}}}, {{{18.400, -51.350}}, {{-0.360, 13.760}}}},
                new Number[][][][]{{{{-7.200, -8.000}}, {{-3.300, 7.700}}}, {{{-4.000, 7.900}}, {{0.400, -4.300}}}},
                new Number[][][][]{{{{6.500, 8.100}}, {{-5.900, 9.900}}}, {{{-4.600, -6.500}}, {{-0.900, -3.200}}}}
        );

        // Shape: [1, 1, 1, 2]x2
        testOps4(
                new Number[][][][]{{{{6.500, -2.100}, {-7.500, -2.100}}}},
                new Number[][][][]{{{{-6.500, 2.100}, {7.500, 2.100}}}},
                new Number[][][][]{{{{6.500, -2.100}, {-7.500, -2.100}}}},
                new Number[][][][]{{{{6.500, -2.100}, {-7.500, -2.100}}}}
        );

        // Shape: [2, 1, 1, 2]x2
        testOps4(
                new Number[][][][]{{{{7.000, -5.600}, {6.900, -2.600}}}},
                new Number[][][][]{{{{-7.600, -3.800}, {5.100, 4.800}}}},
                new Number[][][][]{{{{-2.190, 4.230}, {5.400, -4.070}}}},
                new Number[][][][]{{{{-0.300, -4.700}, {6.000, 1.100}}}},
                new Number[][][][]{{{{7.300, -0.900}, {0.900, -3.700}}}}
        );

        // Shape: [1, 2, 1, 2]x2
        testOps4(
                new Number[][][][]{{{{9.000, -7.400}, {-4.700, 4.400}}}, {{{-1.300, 3.300}, {0.600, 6.100}}}},
                new Number[][][][]{{{{-9.000, 7.400}, {4.700, -4.400}}}, {{{1.300, -3.300}, {-0.600, -6.100}}}},
                new Number[][][][]{{{{9.000, -7.400}, {-4.700, 4.400}}}, {{{-1.300, 3.300}, {0.600, 6.100}}}},
                new Number[][][][]{{{{9.000, -7.400}, {-4.700, 4.400}}}, {{{-1.300, 3.300}, {0.600, 6.100}}}}
        );

        // Shape: [2, 2, 1, 2]x2
        testOps4(
                new Number[][][][]{{{{-3.000, -10.300}, {6.400, 1.500}}}, {{{-11.800, -3.000}, {-9.000, -19.600}}}},
                new Number[][][][]{{{{-9.400, -7.100}, {8.200, 12.100}}}, {{{2.600, -10.000}, {-1.600, 0.200}}}},
                new Number[][][][]{{{{-19.840, 13.920}, {-6.570, -36.040}}}, {{{33.120, -22.750}, {19.610, 96.030}}}},
                new Number[][][][]{{{{-6.200, -8.700}, {7.300, 6.800}}}, {{{-4.600, -6.500}, {-5.300, -9.700}}}},
                new Number[][][][]{{{{3.200, -1.600}, {-0.900, -5.300}}}, {{{-7.200, 3.500}, {-3.700, -9.900}}}}
        );

        // Shape: [1, 1, 2, 2]x2
        testOps4(
                new Number[][][][]{{{{-6.000, 6.900}, {6.100, -8.800}}, {{-4.600, -5.400}, {5.200, -4.000}}}},
                new Number[][][][]{{{{6.000, -6.900}, {-6.100, 8.800}}, {{4.600, 5.400}, {-5.200, 4.000}}}},
                new Number[][][][]{{{{-6.000, 6.900}, {6.100, -8.800}}, {{-4.600, -5.400}, {5.200, -4.000}}}},
                new Number[][][][]{{{{-6.000, 6.900}, {6.100, -8.800}}, {{-4.600, -5.400}, {5.200, -4.000}}}}
        );

        // Shape: [2, 1, 2, 2]x2
        testOps4(
                new Number[][][][]{{{{-4.600, 0.000}, {6.500, 6.300}}, {{17.900, -1.100}, {10.500, 11.100}}}},
                new Number[][][][]{{{{-12.800, -20.000}, {10.100, 4.300}}, {{-1.100, 5.900}, {-0.900, -6.100}}}},
                new Number[][][][]{{{{-35.670, -100.000}, {-14.940, 5.300}}, {{79.800, -8.400}, {27.360, 21.500}}}},
                new Number[][][][]{{{{-8.700, -10.000}, {8.300, 5.300}}, {{8.400, 2.400}, {4.800, 2.500}}}},
                new Number[][][][]{{{{4.100, 10.000}, {-1.800, 1.000}}, {{9.500, -3.500}, {5.700, 8.600}}}}
        );

        // Shape: [1, 2, 2, 2]x2
        testOps4(
                new Number[][][][]{{{{-8.300, -7.800}, {-3.200, -7.300}}, {{-0.200, -8.600}, {9.700, -9.600}}}, {{{-6.500, -5.700}, {-1.200, 4.500}}, {{2.000, 4.100}, {5.000, 6.300}}}},
                new Number[][][][]{{{{8.300, 7.800}, {3.200, 7.300}}, {{0.200, 8.600}, {-9.700, 9.600}}}, {{{6.500, 5.700}, {1.200, -4.500}}, {{-2.000, -4.100}, {-5.000, -6.300}}}},
                new Number[][][][]{{{{-8.300, -7.800}, {-3.200, -7.300}}, {{-0.200, -8.600}, {9.700, -9.600}}}, {{{-6.500, -5.700}, {-1.200, 4.500}}, {{2.000, 4.100}, {5.000, 6.300}}}},
                new Number[][][][]{{{{-8.300, -7.800}, {-3.200, -7.300}}, {{-0.200, -8.600}, {9.700, -9.600}}}, {{{-6.500, -5.700}, {-1.200, 4.500}}, {{2.000, 4.100}, {5.000, 6.300}}}}
        );

        // Shape: [2, 2, 2, 2]x2
        testOps4(
                new Number[][][][]{{{{8.700, 9.000}, {1.100, 8.500}}, {{-6.100, 2.400}, {-0.200, -3.500}}}, {{{-12.700, -2.100}, {-4.200, 6.800}}, {{-12.800, -12.000}, {-6.600, 4.900}}}},
                new Number[][][][]{{{{5.700, -4.000}, {15.900, 7.700}}, {{-3.300, -13.600}, {19.800, -13.300}}}, {{{-4.900, 13.700}, {-12.000, -0.800}}, {{3.000, -7.000}, {-2.200, -0.300}}}},
                new Number[][][][]{{{{10.800, 16.250}, {-62.900, 3.240}}, {{6.580, -44.800}, {-98.000, -41.160}}}, {{{34.320, -45.820}, {-31.590, 11.400}}, {{38.710, 23.750}, {9.680, 5.980}}}},
                new Number[][][][]{{{{7.200, 2.500}, {8.500, 8.100}}, {{-4.700, -5.600}, {9.800, -8.400}}}, {{{-8.800, 5.800}, {-8.100, 3.000}}, {{-4.900, -9.500}, {-4.400, 2.300}}}},
                new Number[][][][]{{{{1.500, 6.500}, {-7.400, 0.400}}, {{-1.400, 8.000}, {-10.000, 4.900}}}, {{{-3.900, -7.900}, {3.900, 3.800}}, {{-7.900, -2.500}, {-2.200, 2.600}}}}
        );

    }
    private void testErrors() {
        testErrors(List.of(
                vector(new Number[]{2.200}),
                vector(new Number[]{2.700, -6.200}),
                vector(new Number[]{7.600, 7.100, 9.800}),
                matrix(new Number[][]{{-4.200}}),
                matrix(new Number[][]{{-0.300}, {-0.400}}),
                matrix(new Number[][]{{0.300}, {-2.600}, {-4.700}}),
                matrix(new Number[][]{{-7.200, 3.200}}),
                matrix(new Number[][]{{9.400, -2.800}, {-1.900, -1.000}}),
                matrix(new Number[][]{{6.200, 4.400}, {2.600, 3.400}, {-0.900, -7.300}}),
                matrix(new Number[][]{{0.900, -6.600, -0.800}}),
                matrix(new Number[][]{{7.000, -6.200, 9.500}, {7.300, -4.500, 1.700}}),
                matrix(new Number[][]{{-5.400, -7.000, 1.100}, {-0.300, -0.100, 0.900}, {7.300, -5.700, 0.900}}),
                tensor3(new Number[][][]{{{4.700}}}),
                tensor3(new Number[][][]{{{7.900}}, {{0.800}}}),
                tensor3(new Number[][][]{{{3.500}}, {{8.700}}, {{1.600}}}),
                tensor3(new Number[][][]{{{-1.200}, {7.600}}}),
                tensor3(new Number[][][]{{{-9.300}, {3.100}}, {{-4.700}, {-0.600}}}),
                tensor3(new Number[][][]{{{9.300}, {-6.600}}, {{-6.400}, {8.700}}, {{3.900}, {-1.000}}}),
                tensor3(new Number[][][]{{{6.600}, {-6.300}, {5.500}}}),
                tensor3(new Number[][][]{{{9.500}, {3.200}, {2.300}}, {{5.200}, {-3.400}, {-5.600}}}),
                tensor3(new Number[][][]{{{2.200}, {7.000}, {-3.100}}, {{-0.600}, {-5.600}, {8.600}}, {{-4.700}, {-2.000}, {4.700}}}),
                tensor3(new Number[][][]{{{4.600, -9.200}}}),
                tensor3(new Number[][][]{{{1.700, 3.600}}, {{-1.100, -2.100}}}),
                tensor3(new Number[][][]{{{-7.600, 2.000}}, {{10.000, 4.500}}, {{-6.400, -3.700}}}),
                tensor3(new Number[][][]{{{0.600, -8.500}, {-0.600, 5.600}}}),
                tensor3(new Number[][][]{{{-9.900, 8.500}, {-10.000, 1.000}}, {{-4.500, -2.100}, {-7.000, -1.700}}}),
                tensor3(new Number[][][]{{{-1.800, 9.300}, {-1.200, -5.300}}, {{8.700, -4.600}, {2.900, 6.100}}, {{-9.100, 4.800}, {0.700, -5.700}}}),
                tensor3(new Number[][][]{{{-7.900, 7.600}, {-0.200, 2.000}, {1.700, -4.100}}}),
                tensor3(new Number[][][]{{{7.600, -4.900}, {5.100, -8.800}, {-8.700, 3.500}}, {{-0.200, -3.400}, {-2.800, 8.600}, {2.500, 4.300}}}),
                tensor3(new Number[][][]{{{-6.000, -3.700}, {-8.900, 5.800}, {-3.100, 1.200}}, {{-7.900, -8.900}, {-1.800, -4.900}, {-7.200, 3.100}}, {{4.600, 0.900}, {2.600, -5.800}, {3.200, -1.700}}}),
                tensor3(new Number[][][]{{{-2.900, -0.400, 6.100}}}),
                tensor3(new Number[][][]{{{0.700, -7.400, 7.900}}, {{-8.900, -1.600, 8.000}}}),
                tensor3(new Number[][][]{{{-7.100, -2.900, 8.800}}, {{-4.700, -4.000, 6.300}}, {{1.100, -0.600, -2.700}}}),
                tensor3(new Number[][][]{{{-5.400, 5.300, 0.600}, {8.300, -0.400, 7.800}}}),
                tensor3(new Number[][][]{{{9.000, 7.000, -5.400}, {6.100, 4.300, -9.100}}, {{-2.000, 8.000, -4.000}, {-6.700, 7.800, 2.200}}}),
                tensor3(new Number[][][]{{{-7.600, 7.000, 2.000}, {-5.400, 8.400, 10.000}}, {{-1.500, 2.400, -6.300}, {-3.000, 5.800, -9.100}}, {{-4.200, -5.900, 3.000}, {6.300, 9.200, 5.400}}}),
                tensor3(new Number[][][]{{{1.500, 6.900, 0.400}, {6.800, 3.400, 7.600}, {-1.500, 8.800, 6.700}}}),
                tensor3(new Number[][][]{{{-9.200, 6.500, -3.700}, {5.200, 2.700, -6.500}, {-1.200, 7.400, 9.800}}, {{-7.900, -6.400, -0.100}, {-6.500, -3.900, -9.100}, {-8.300, 7.600, 7.600}}}),
                tensor3(new Number[][][]{{{-3.100, 1.000, -1.800}, {8.400, -0.400, 3.000}, {3.800, 7.600, 0.600}}, {{-5.800, -3.600, 3.400}, {8.100, 7.200, 7.400}, {-7.600, 2.700, 9.900}}, {{7.300, 2.800, 9.700}, {-5.800, -9.900, 7.600}, {3.200, 8.000, -3.200}}}),
                tensor4(new Number[][][][]{{{{9.300}}}}),
                tensor4(new Number[][][][]{{{{-4.300}}}, {{{-8.700}}}}),
                tensor4(new Number[][][][]{{{{-9.100}}, {{8.900}}}}),
                tensor4(new Number[][][][]{{{{-7.100}}, {{-2.300}}}, {{{2.400}}, {{-9.800}}}}),
                tensor4(new Number[][][][]{{{{-5.300}, {-3.800}}}}),
                tensor4(new Number[][][][]{{{{-7.600}, {1.500}}}, {{{-5.600}, {-7.500}}}}),
                tensor4(new Number[][][][]{{{{-5.000}, {-9.500}}, {{-2.100}, {0.900}}}}),
                tensor4(new Number[][][][]{{{{2.200}, {-6.700}}, {{-2.400}, {1.900}}}, {{{6.100}, {-1.000}}, {{7.100}, {7.000}}}}),
                tensor4(new Number[][][][]{{{{8.200, 5.200}}}}),
                tensor4(new Number[][][][]{{{{-4.700, -5.200}}}, {{{-0.900, 9.000}}}}),
                tensor4(new Number[][][][]{{{{-7.500, 2.100}}, {{6.300, -4.500}}}}),
                tensor4(new Number[][][][]{{{{-2.700, 3.300}}, {{-9.800, -4.800}}}, {{{-3.000, -0.300}}, {{-1.600, 3.200}}}}),
                tensor4(new Number[][][][]{{{{-5.700, -5.700}, {-6.100, 5.900}}}}),
                tensor4(new Number[][][][]{{{{-9.300, -0.300}, {3.900, -2.400}}}, {{{9.400, -4.700}, {-5.500, 5.900}}}}),
                tensor4(new Number[][][][]{{{{0.800, 1.100}, {-8.700, -9.100}}, {{8.200, -1.600}, {0.700, -1.300}}}}),
                tensor4(new Number[][][][]{{{{-8.300, -5.900}, {-3.700, 5.100}}, {{-9.000, 2.300}, {-9.900, -4.800}}}, {{{-3.100, -9.600}, {-4.200, -1.200}}, {{6.200, 9.600}, {-7.800, 5.800}}}})
        ));
    }
}
